{
    "sourceFile": "transform_dollar.c",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1701281961712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1701282022787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:19:21 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:20:22 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -57,9 +57,9 @@\n {\n \tint\tlength;\n \n \tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' ')\n+\twhile (length > 0 && (str[length - 1] == ' '))\n \t\tlength--;\n \tstr[length] = '\\0';\n \treturn (str);\n }\n@@ -78,8 +78,9 @@\n \tt_var\t\t\t*list;\n \tt_short_dollar\td;\n \n \tinit_transform_d(&d);\n+\tremove\n \twhile (s[++d.i] != '\\0')\n \t{\n \t\td.size = 0;\n \t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n"
                },
                {
                    "date": 1701282027915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:20:22 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:20:27 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -78,9 +78,9 @@\n \tt_var\t\t\t*list;\n \tt_short_dollar\td;\n \n \tinit_transform_d(&d);\n-\tremove\n+\tremove_slashes\n \twhile (s[++d.i] != '\\0')\n \t{\n \t\td.size = 0;\n \t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n"
                },
                {
                    "date": 1701282035507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,101 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   transform_dollar.c                                 :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:20:35 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+void\tinit_transform_d(t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\td->i = -1;\n+\td->env_len = 0;\n+\td->save = 0;\n+\td->save_pre = 0;\n+\td->size = 0;\n+\td->slash_count = 0;\n+\td->start = 0;\n+\td->flag = 0;\n+}\n+\n+int\tcreate_flags(char *s, t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\tif (s[d->i] == '\\\\')\n+\t{\n+\t\twhile (s[d->i++] == '\\\\')\n+\t\t\td->slash_count++;\n+\t}\n+\telse\n+\t\td->slash_count = 0;\n+\tif (d->flag == 2 && s[d->i] == '\"')\n+\t\td->flag = 0;\n+\telse if (s[d->i] == '\"')\n+\t\td->flag = 2;\n+\tif (s[d->i] == '\\'' && d->flag == 0)\n+\t\td->flag = 1;\n+\twhile (s[d->i] && d->flag == 1)\n+\t{\n+\t\tif (s[++d->i] == '\\'')\n+\t\t{\n+\t\t\td->flag = 0;\n+\t\t\tbreak ;\n+\t\t}\n+\t}\n+\td->start = d->i;\n+\treturn (1);\n+}\n+\n+char\t*remove_spaces(char *str)\n+{\n+\tint\tlength;\n+\n+\tlength = ft_strlen(str);\n+\twhile (length > 0 && (str[length - 1] == ' '))\n+\t\tlength--;\n+\tstr[length] = '\\0';\n+\treturn (str);\n+}\n+\n+void\tlist_exist(t_var *list, t_short_dollar *d)\n+{\n+\tif (list != NULL)\n+\t{\n+\t\td->tmp = add_slashes(ft_strdup(list->value));\n+\t\td->size = (int)ft_strlen(d->tmp);\n+\t}\n+}\n+\n+char\t*transform_for_dollar(char *s, t_data *data)\n+{\n+\tt_var\t\t\t*list;\n+\tt_short_dollar\td;\n+\n+\tinit_transform_d(&d);\n+\tsremove_slashes(s);\n+\twhile (s[++d.i] != '\\0')\n+\t{\n+\t\td.size = 0;\n+\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n+\t\t\treturn (s);\n+\t\td.env_len = checksymbol(s + d.i + 1);\n+\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n+\t\t{\n+\t\t\td.save = s[d.i + d.env_len + 1];\n+\t\t\ts[d.i + d.env_len + 1] = '\\0';\n+\t\t\tlist = search_variable_tvar(s + d.i, data);\n+\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n+\t\t\tlist_exist(list, &d);\n+\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n+\t\t\td.i += d.size;\n+\t\t}\n+\t}\n+\treturn (remove_spaces(s));\n+}\n"
                },
                {
                    "date": 1701282058355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   transform_dollar.c                                 :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:20:58 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+void\tinit_transform_d(t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\td->i = -1;\n+\td->env_len = 0;\n+\td->save = 0;\n+\td->save_pre = 0;\n+\td->size = 0;\n+\td->slash_count = 0;\n+\td->start = 0;\n+\td->flag = 0;\n+}\n+\n+int\tcreate_flags(char *s, t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\tif (s[d->i] == '\\\\')\n+\t{\n+\t\twhile (s[d->i++] == '\\\\')\n+\t\t\td->slash_count++;\n+\t}\n+\telse\n+\t\td->slash_count = 0;\n+\tif (d->flag == 2 && s[d->i] == '\"')\n+\t\td->flag = 0;\n+\telse if (s[d->i] == '\"')\n+\t\td->flag = 2;\n+\tif (s[d->i] == '\\'' && d->flag == 0)\n+\t\td->flag = 1;\n+\twhile (s[d->i] && d->flag == 1)\n+\t{\n+\t\tif (s[++d->i] == '\\'')\n+\t\t{\n+\t\t\td->flag = 0;\n+\t\t\tbreak ;\n+\t\t}\n+\t}\n+\td->start = d->i;\n+\treturn (1);\n+}\n+\n+char\t*remove_spaces(char *str)\n+{\n+\tint\tlength;\n+\n+\tlength = ft_strlen(str);\n+\twhile (length > 0 && (str[length - 1] == ' '))\n+\t\tlength--;\n+\tstr[length] = '\\0';\n+\treturn (str);\n+}\n+\n+void\tlist_exist(t_var *list, t_short_dollar *d)\n+{\n+\tif (list != NULL)\n+\t{\n+\t\td->tmp = add_slashes(ft_strdup(list->value));\n+\t\td->size = (int)ft_strlen(d->tmp);\n+\t}\n+}\n+\n+\n+\n+char\t*transform_for_dollar(char *s, t_data *data)\n+{\n+\tt_var\t\t\t*list;\n+\tt_short_dollar\td;\n+\n+\tinit_transform_d(&d);\n+\ts = remove_slashes(s);\n+\twhile (s[++d.i] != '\\0')\n+\t{\n+\t\td.size = 0;\n+\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n+\t\t\treturn (s);\n+\t\td.env_len = checksymbol(s + d.i + 1);\n+\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n+\t\t{\n+\t\t\td.save = s[d.i + d.env_len + 1];\n+\t\t\ts[d.i + d.env_len + 1] = '\\0';\n+\t\t\tlist = search_variable_tvar(s + d.i, data);\n+\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n+\t\t\tlist_exist(list, &d);\n+\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n+\t\t\td.i += d.size;\n+\t\t}\n+\t}\n+\treturn (remove_spaces(s));\n+}\n"
                },
                {
                    "date": 1701282068687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:20:58 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:21:08 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -72,10 +72,10 @@\n \t\td->size = (int)ft_strlen(d->tmp);\n \t}\n }\n \n+char *remove_slashes()\n \n-\n char\t*transform_for_dollar(char *s, t_data *data)\n {\n \tt_var\t\t\t*list;\n \tt_short_dollar\td;\n@@ -100,206 +100,4 @@\n \t\t}\n \t}\n \treturn (remove_spaces(s));\n }\n-/* ************************************************************************** */\n-/*                                                                            */\n-/*                                                        :::      ::::::::   */\n-/*   transform_dollar.c                                 :+:      :+:    :+:   */\n-/*                                                    +:+ +:+         +:+     */\n-/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n-/*                                                +#+#+#+#+#+   +#+           */\n-/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:20:35 by shhuang          ###   ########.fr       */\n-/*                                                                            */\n-/* ************************************************************************** */\n-\n-#include \"short_code.h\"\n-\n-void\tinit_transform_d(t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\td->i = -1;\n-\td->env_len = 0;\n-\td->save = 0;\n-\td->save_pre = 0;\n-\td->size = 0;\n-\td->slash_count = 0;\n-\td->start = 0;\n-\td->flag = 0;\n-}\n-\n-int\tcreate_flags(char *s, t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\tif (s[d->i] == '\\\\')\n-\t{\n-\t\twhile (s[d->i++] == '\\\\')\n-\t\t\td->slash_count++;\n-\t}\n-\telse\n-\t\td->slash_count = 0;\n-\tif (d->flag == 2 && s[d->i] == '\"')\n-\t\td->flag = 0;\n-\telse if (s[d->i] == '\"')\n-\t\td->flag = 2;\n-\tif (s[d->i] == '\\'' && d->flag == 0)\n-\t\td->flag = 1;\n-\twhile (s[d->i] && d->flag == 1)\n-\t{\n-\t\tif (s[++d->i] == '\\'')\n-\t\t{\n-\t\t\td->flag = 0;\n-\t\t\tbreak ;\n-\t\t}\n-\t}\n-\td->start = d->i;\n-\treturn (1);\n-}\n-\n-char\t*remove_spaces(char *str)\n-{\n-\tint\tlength;\n-\n-\tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' '))\n-\t\tlength--;\n-\tstr[length] = '\\0';\n-\treturn (str);\n-}\n-\n-void\tlist_exist(t_var *list, t_short_dollar *d)\n-{\n-\tif (list != NULL)\n-\t{\n-\t\td->tmp = add_slashes(ft_strdup(list->value));\n-\t\td->size = (int)ft_strlen(d->tmp);\n-\t}\n-}\n-\n-char\t*transform_for_dollar(char *s, t_data *data)\n-{\n-\tt_var\t\t\t*list;\n-\tt_short_dollar\td;\n-\n-\tinit_transform_d(&d);\n-\tsremove_slashes(s);\n-\twhile (s[++d.i] != '\\0')\n-\t{\n-\t\td.size = 0;\n-\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n-\t\t\treturn (s);\n-\t\td.env_len = checksymbol(s + d.i + 1);\n-\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n-\t\t{\n-\t\t\td.save = s[d.i + d.env_len + 1];\n-\t\t\ts[d.i + d.env_len + 1] = '\\0';\n-\t\t\tlist = search_variable_tvar(s + d.i, data);\n-\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n-\t\t\tlist_exist(list, &d);\n-\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n-\t\t\td.i += d.size;\n-\t\t}\n-\t}\n-\treturn (remove_spaces(s));\n-}\n-/* ************************************************************************** */\n-/*                                                                            */\n-/*                                                        :::      ::::::::   */\n-/*   transform_dollar.c                                 :+:      :+:    :+:   */\n-/*                                                    +:+ +:+         +:+     */\n-/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n-/*                                                +#+#+#+#+#+   +#+           */\n-/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:20:27 by shhuang          ###   ########.fr       */\n-/*                                                                            */\n-/* ************************************************************************** */\n-\n-#include \"short_code.h\"\n-\n-void\tinit_transform_d(t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\td->i = -1;\n-\td->env_len = 0;\n-\td->save = 0;\n-\td->save_pre = 0;\n-\td->size = 0;\n-\td->slash_count = 0;\n-\td->start = 0;\n-\td->flag = 0;\n-}\n-\n-int\tcreate_flags(char *s, t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\tif (s[d->i] == '\\\\')\n-\t{\n-\t\twhile (s[d->i++] == '\\\\')\n-\t\t\td->slash_count++;\n-\t}\n-\telse\n-\t\td->slash_count = 0;\n-\tif (d->flag == 2 && s[d->i] == '\"')\n-\t\td->flag = 0;\n-\telse if (s[d->i] == '\"')\n-\t\td->flag = 2;\n-\tif (s[d->i] == '\\'' && d->flag == 0)\n-\t\td->flag = 1;\n-\twhile (s[d->i] && d->flag == 1)\n-\t{\n-\t\tif (s[++d->i] == '\\'')\n-\t\t{\n-\t\t\td->flag = 0;\n-\t\t\tbreak ;\n-\t\t}\n-\t}\n-\td->start = d->i;\n-\treturn (1);\n-}\n-\n-char\t*remove_spaces(char *str)\n-{\n-\tint\tlength;\n-\n-\tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' '))\n-\t\tlength--;\n-\tstr[length] = '\\0';\n-\treturn (str);\n-}\n-\n-void\tlist_exist(t_var *list, t_short_dollar *d)\n-{\n-\tif (list != NULL)\n-\t{\n-\t\td->tmp = add_slashes(ft_strdup(list->value));\n-\t\td->size = (int)ft_strlen(d->tmp);\n-\t}\n-}\n-\n-char\t*transform_for_dollar(char *s, t_data *data)\n-{\n-\tt_var\t\t\t*list;\n-\tt_short_dollar\td;\n-\n-\tinit_transform_d(&d);\n-\tremove_slashes\n-\twhile (s[++d.i] != '\\0')\n-\t{\n-\t\td.size = 0;\n-\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n-\t\t\treturn (s);\n-\t\td.env_len = checksymbol(s + d.i + 1);\n-\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n-\t\t{\n-\t\t\td.save = s[d.i + d.env_len + 1];\n-\t\t\ts[d.i + d.env_len + 1] = '\\0';\n-\t\t\tlist = search_variable_tvar(s + d.i, data);\n-\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n-\t\t\tlist_exist(list, &d);\n-\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n-\t\t\td.i += d.size;\n-\t\t}\n-\t}\n-\treturn (remove_spaces(s));\n-}\n"
                },
                {
                    "date": 1701282075080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:21:08 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:21:15 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -72,9 +72,12 @@\n \t\td->size = (int)ft_strlen(d->tmp);\n \t}\n }\n \n-char *remove_slashes()\n+char *remove_slashes(char *s)\n+{\n+\t\n+}\n \n char\t*transform_for_dollar(char *s, t_data *data)\n {\n \tt_var\t\t\t*list;\n"
                },
                {
                    "date": 1701282086235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:21:15 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:21:26 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -74,9 +74,12 @@\n }\n \n char *remove_slashes(char *s)\n {\n+\tint i; \n+\ti = 0;\n \t\n+\twhile()\n }\n \n char\t*transform_for_dollar(char *s, t_data *data)\n {\n"
                },
                {
                    "date": 1701282095623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:21:26 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:21:35 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -77,9 +77,12 @@\n {\n \tint i; \n \ti = 0;\n \t\n-\twhile()\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] == '\\')\n+\t}\n }\n \n char\t*transform_for_dollar(char *s, t_data *data)\n {\n"
                },
                {
                    "date": 1701282102513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   transform_dollar.c                                 :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:21:42 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+void\tinit_transform_d(t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\td->i = -1;\n+\td->env_len = 0;\n+\td->save = 0;\n+\td->save_pre = 0;\n+\td->size = 0;\n+\td->slash_count = 0;\n+\td->start = 0;\n+\td->flag = 0;\n+}\n+\n+int\tcreate_flags(char *s, t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\tif (s[d->i] == '\\\\')\n+\t{\n+\t\twhile (s[d->i++] == '\\\\')\n+\t\t\td->slash_count++;\n+\t}\n+\telse\n+\t\td->slash_count = 0;\n+\tif (d->flag == 2 && s[d->i] == '\"')\n+\t\td->flag = 0;\n+\telse if (s[d->i] == '\"')\n+\t\td->flag = 2;\n+\tif (s[d->i] == '\\'' && d->flag == 0)\n+\t\td->flag = 1;\n+\twhile (s[d->i] && d->flag == 1)\n+\t{\n+\t\tif (s[++d->i] == '\\'')\n+\t\t{\n+\t\t\td->flag = 0;\n+\t\t\tbreak ;\n+\t\t}\n+\t}\n+\td->start = d->i;\n+\treturn (1);\n+}\n+\n+char\t*remove_spaces(char *str)\n+{\n+\tint\tlength;\n+\n+\tlength = ft_strlen(str);\n+\twhile (length > 0 && (str[length - 1] == ' '))\n+\t\tlength--;\n+\tstr[length] = '\\0';\n+\treturn (str);\n+}\n+\n+void\tlist_exist(t_var *list, t_short_dollar *d)\n+{\n+\tif (list != NULL)\n+\t{\n+\t\td->tmp = add_slashes(ft_strdup(list->value));\n+\t\td->size = (int)ft_strlen(d->tmp);\n+\t}\n+}\n+\n+char *remove_slashes(char *s)\n+{\n+\tint i; \n+\ti = 0;\n+\t\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] == '\\')\n+\t\t{\n+\t\t\t\n+\t\t}\n+\t}\n+}\n+\n+char\t*transform_for_dollar(char *s, t_data *data)\n+{\n+\tt_var\t\t\t*list;\n+\tt_short_dollar\td;\n+\n+\tinit_transform_d(&d);\n+\ts = remove_slashes(s);\n+\twhile (s[++d.i] != '\\0')\n+\t{\n+\t\td.size = 0;\n+\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n+\t\t\treturn (s);\n+\t\td.env_len = checksymbol(s + d.i + 1);\n+\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n+\t\t{\n+\t\t\td.save = s[d.i + d.env_len + 1];\n+\t\t\ts[d.i + d.env_len + 1] = '\\0';\n+\t\t\tlist = search_variable_tvar(s + d.i, data);\n+\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n+\t\t\tlist_exist(list, &d);\n+\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n+\t\t\td.i += d.size;\n+\t\t}\n+\t}\n+\treturn (remove_spaces(s));\n+}\n"
                },
                {
                    "date": 1701282109688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:21:42 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:21:49 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -79,9 +79,9 @@\n \ti = 0;\n \t\n \twhile(s[i])\n \t{\n-\t\tif(s[i] == '\\')\n+\t\tif(s[i] != '\\\\')\n \t\t{\n \t\t\t\n \t\t}\n \t}\n@@ -112,116 +112,4 @@\n \t\t}\n \t}\n \treturn (remove_spaces(s));\n }\n-/* ************************************************************************** */\n-/*                                                                            */\n-/*                                                        :::      ::::::::   */\n-/*   transform_dollar.c                                 :+:      :+:    :+:   */\n-/*                                                    +:+ +:+         +:+     */\n-/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n-/*                                                +#+#+#+#+#+   +#+           */\n-/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:21:35 by shhuang          ###   ########.fr       */\n-/*                                                                            */\n-/* ************************************************************************** */\n-\n-#include \"short_code.h\"\n-\n-void\tinit_transform_d(t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\td->i = -1;\n-\td->env_len = 0;\n-\td->save = 0;\n-\td->save_pre = 0;\n-\td->size = 0;\n-\td->slash_count = 0;\n-\td->start = 0;\n-\td->flag = 0;\n-}\n-\n-int\tcreate_flags(char *s, t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\tif (s[d->i] == '\\\\')\n-\t{\n-\t\twhile (s[d->i++] == '\\\\')\n-\t\t\td->slash_count++;\n-\t}\n-\telse\n-\t\td->slash_count = 0;\n-\tif (d->flag == 2 && s[d->i] == '\"')\n-\t\td->flag = 0;\n-\telse if (s[d->i] == '\"')\n-\t\td->flag = 2;\n-\tif (s[d->i] == '\\'' && d->flag == 0)\n-\t\td->flag = 1;\n-\twhile (s[d->i] && d->flag == 1)\n-\t{\n-\t\tif (s[++d->i] == '\\'')\n-\t\t{\n-\t\t\td->flag = 0;\n-\t\t\tbreak ;\n-\t\t}\n-\t}\n-\td->start = d->i;\n-\treturn (1);\n-}\n-\n-char\t*remove_spaces(char *str)\n-{\n-\tint\tlength;\n-\n-\tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' '))\n-\t\tlength--;\n-\tstr[length] = '\\0';\n-\treturn (str);\n-}\n-\n-void\tlist_exist(t_var *list, t_short_dollar *d)\n-{\n-\tif (list != NULL)\n-\t{\n-\t\td->tmp = add_slashes(ft_strdup(list->value));\n-\t\td->size = (int)ft_strlen(d->tmp);\n-\t}\n-}\n-\n-char *remove_slashes(char *s)\n-{\n-\tint i; \n-\ti = 0;\n-\t\n-\twhile(s[i])\n-\t{\n-\t\tif(s[i] == '\\')\n-\t}\n-}\n-\n-char\t*transform_for_dollar(char *s, t_data *data)\n-{\n-\tt_var\t\t\t*list;\n-\tt_short_dollar\td;\n-\n-\tinit_transform_d(&d);\n-\ts = remove_slashes(s);\n-\twhile (s[++d.i] != '\\0')\n-\t{\n-\t\td.size = 0;\n-\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n-\t\t\treturn (s);\n-\t\td.env_len = checksymbol(s + d.i + 1);\n-\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n-\t\t{\n-\t\t\td.save = s[d.i + d.env_len + 1];\n-\t\t\ts[d.i + d.env_len + 1] = '\\0';\n-\t\t\tlist = search_variable_tvar(s + d.i, data);\n-\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n-\t\t\tlist_exist(list, &d);\n-\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n-\t\t\td.i += d.size;\n-\t\t}\n-\t}\n-\treturn (remove_spaces(s));\n-}\n"
                },
                {
                    "date": 1701282119750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   transform_dollar.c                                 :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:21:59 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+void\tinit_transform_d(t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\td->i = -1;\n+\td->env_len = 0;\n+\td->save = 0;\n+\td->save_pre = 0;\n+\td->size = 0;\n+\td->slash_count = 0;\n+\td->start = 0;\n+\td->flag = 0;\n+}\n+\n+int\tcreate_flags(char *s, t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\tif (s[d->i] == '\\\\')\n+\t{\n+\t\twhile (s[d->i++] == '\\\\')\n+\t\t\td->slash_count++;\n+\t}\n+\telse\n+\t\td->slash_count = 0;\n+\tif (d->flag == 2 && s[d->i] == '\"')\n+\t\td->flag = 0;\n+\telse if (s[d->i] == '\"')\n+\t\td->flag = 2;\n+\tif (s[d->i] == '\\'' && d->flag == 0)\n+\t\td->flag = 1;\n+\twhile (s[d->i] && d->flag == 1)\n+\t{\n+\t\tif (s[++d->i] == '\\'')\n+\t\t{\n+\t\t\td->flag = 0;\n+\t\t\tbreak ;\n+\t\t}\n+\t}\n+\td->start = d->i;\n+\treturn (1);\n+}\n+\n+char\t*remove_spaces(char *str)\n+{\n+\tint\tlength;\n+\n+\tlength = ft_strlen(str);\n+\twhile (length > 0 && (str[length - 1] == ' '))\n+\t\tlength--;\n+\tstr[length] = '\\0';\n+\treturn (str);\n+}\n+\n+void\tlist_exist(t_var *list, t_short_dollar *d)\n+{\n+\tif (list != NULL)\n+\t{\n+\t\td->tmp = add_slashes(ft_strdup(list->value));\n+\t\td->size = (int)ft_strlen(d->tmp);\n+\t}\n+}\n+\n+char *remove_slashes(char *s)\n+{\n+\tint i;\n+\tint count;\n+\n+\tcount = 0; \n+\ti = 0;\n+\t\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] != '\\\\')\n+\t\t{\n+\t\t\t\n+\t\t}\n+\t}\n+}\n+\n+char\t*transform_for_dollar(char *s, t_data *data)\n+{\n+\tt_var\t\t\t*list;\n+\tt_short_dollar\td;\n+\n+\tinit_transform_d(&d);\n+\ts = remove_slashes(s);\n+\twhile (s[++d.i] != '\\0')\n+\t{\n+\t\td.size = 0;\n+\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n+\t\t\treturn (s);\n+\t\td.env_len = checksymbol(s + d.i + 1);\n+\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n+\t\t{\n+\t\t\td.save = s[d.i + d.env_len + 1];\n+\t\t\ts[d.i + d.env_len + 1] = '\\0';\n+\t\t\tlist = search_variable_tvar(s + d.i, data);\n+\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n+\t\t\tlist_exist(list, &d);\n+\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n+\t\t\td.i += d.size;\n+\t\t}\n+\t}\n+\treturn (remove_spaces(s));\n+}\n"
                },
                {
                    "date": 1701282126300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   transform_dollar.c                                 :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:22:06 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+void\tinit_transform_d(t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\td->i = -1;\n+\td->env_len = 0;\n+\td->save = 0;\n+\td->save_pre = 0;\n+\td->size = 0;\n+\td->slash_count = 0;\n+\td->start = 0;\n+\td->flag = 0;\n+}\n+\n+int\tcreate_flags(char *s, t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\tif (s[d->i] == '\\\\')\n+\t{\n+\t\twhile (s[d->i++] == '\\\\')\n+\t\t\td->slash_count++;\n+\t}\n+\telse\n+\t\td->slash_count = 0;\n+\tif (d->flag == 2 && s[d->i] == '\"')\n+\t\td->flag = 0;\n+\telse if (s[d->i] == '\"')\n+\t\td->flag = 2;\n+\tif (s[d->i] == '\\'' && d->flag == 0)\n+\t\td->flag = 1;\n+\twhile (s[d->i] && d->flag == 1)\n+\t{\n+\t\tif (s[++d->i] == '\\'')\n+\t\t{\n+\t\t\td->flag = 0;\n+\t\t\tbreak ;\n+\t\t}\n+\t}\n+\td->start = d->i;\n+\treturn (1);\n+}\n+\n+char\t*remove_spaces(char *str)\n+{\n+\tint\tlength;\n+\n+\tlength = ft_strlen(str);\n+\twhile (length > 0 && (str[length - 1] == ' '))\n+\t\tlength--;\n+\tstr[length] = '\\0';\n+\treturn (str);\n+}\n+\n+void\tlist_exist(t_var *list, t_short_dollar *d)\n+{\n+\tif (list != NULL)\n+\t{\n+\t\td->tmp = add_slashes(ft_strdup(list->value));\n+\t\td->size = (int)ft_strlen(d->tmp);\n+\t}\n+}\n+\n+char *remove_slashes(char *s)\n+{\n+\tint i;\n+\tint count;\n+\n+\tcount = 0; \n+\ti = 0;\n+\t\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] != '\\\\')\n+\t\t{\n+\t\t\tcount++;\n+\t\t}\n+\t}\n+}\n+\n+char\t*transform_for_dollar(char *s, t_data *data)\n+{\n+\tt_var\t\t\t*list;\n+\tt_short_dollar\td;\n+\n+\tinit_transform_d(&d);\n+\ts = remove_slashes(s);\n+\twhile (s[++d.i] != '\\0')\n+\t{\n+\t\td.size = 0;\n+\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n+\t\t\treturn (s);\n+\t\td.env_len = checksymbol(s + d.i + 1);\n+\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n+\t\t{\n+\t\t\td.save = s[d.i + d.env_len + 1];\n+\t\t\ts[d.i + d.env_len + 1] = '\\0';\n+\t\t\tlist = search_variable_tvar(s + d.i, data);\n+\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n+\t\t\tlist_exist(list, &d);\n+\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n+\t\t\td.i += d.size;\n+\t\t}\n+\t}\n+\treturn (remove_spaces(s));\n+}\n"
                },
                {
                    "date": 1701282136074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   transform_dollar.c                                 :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:22:16 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+void\tinit_transform_d(t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\td->i = -1;\n+\td->env_len = 0;\n+\td->save = 0;\n+\td->save_pre = 0;\n+\td->size = 0;\n+\td->slash_count = 0;\n+\td->start = 0;\n+\td->flag = 0;\n+}\n+\n+int\tcreate_flags(char *s, t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\tif (s[d->i] == '\\\\')\n+\t{\n+\t\twhile (s[d->i++] == '\\\\')\n+\t\t\td->slash_count++;\n+\t}\n+\telse\n+\t\td->slash_count = 0;\n+\tif (d->flag == 2 && s[d->i] == '\"')\n+\t\td->flag = 0;\n+\telse if (s[d->i] == '\"')\n+\t\td->flag = 2;\n+\tif (s[d->i] == '\\'' && d->flag == 0)\n+\t\td->flag = 1;\n+\twhile (s[d->i] && d->flag == 1)\n+\t{\n+\t\tif (s[++d->i] == '\\'')\n+\t\t{\n+\t\t\td->flag = 0;\n+\t\t\tbreak ;\n+\t\t}\n+\t}\n+\td->start = d->i;\n+\treturn (1);\n+}\n+\n+char\t*remove_spaces(char *str)\n+{\n+\tint\tlength;\n+\n+\tlength = ft_strlen(str);\n+\twhile (length > 0 && (str[length - 1] == ' '))\n+\t\tlength--;\n+\tstr[length] = '\\0';\n+\treturn (str);\n+}\n+\n+void\tlist_exist(t_var *list, t_short_dollar *d)\n+{\n+\tif (list != NULL)\n+\t{\n+\t\td->tmp = add_slashes(ft_strdup(list->value));\n+\t\td->size = (int)ft_strlen(d->tmp);\n+\t}\n+}\n+\n+char *remove_slashes(char *s)\n+{\n+\tint i;\n+\tint count;\n+\n+\tcount = 0; \n+\ti = 0;\n+\t\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] != '\\\\')\n+\t\t\tcount++;\n+\t\ti++;\n+\t}\n+\t\n+}\n+\n+char\t*transform_for_dollar(char *s, t_data *data)\n+{\n+\tt_var\t\t\t*list;\n+\tt_short_dollar\td;\n+\n+\tinit_transform_d(&d);\n+\ts = remove_slashes(s);\n+\twhile (s[++d.i] != '\\0')\n+\t{\n+\t\td.size = 0;\n+\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n+\t\t\treturn (s);\n+\t\td.env_len = checksymbol(s + d.i + 1);\n+\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n+\t\t{\n+\t\t\td.save = s[d.i + d.env_len + 1];\n+\t\t\ts[d.i + d.env_len + 1] = '\\0';\n+\t\t\tlist = search_variable_tvar(s + d.i, data);\n+\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n+\t\t\tlist_exist(list, &d);\n+\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n+\t\t\td.i += d.size;\n+\t\t}\n+\t}\n+\treturn (remove_spaces(s));\n+}\n"
                },
                {
                    "date": 1701282146456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   transform_dollar.c                                 :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:22:26 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+void\tinit_transform_d(t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\td->i = -1;\n+\td->env_len = 0;\n+\td->save = 0;\n+\td->save_pre = 0;\n+\td->size = 0;\n+\td->slash_count = 0;\n+\td->start = 0;\n+\td->flag = 0;\n+}\n+\n+int\tcreate_flags(char *s, t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\tif (s[d->i] == '\\\\')\n+\t{\n+\t\twhile (s[d->i++] == '\\\\')\n+\t\t\td->slash_count++;\n+\t}\n+\telse\n+\t\td->slash_count = 0;\n+\tif (d->flag == 2 && s[d->i] == '\"')\n+\t\td->flag = 0;\n+\telse if (s[d->i] == '\"')\n+\t\td->flag = 2;\n+\tif (s[d->i] == '\\'' && d->flag == 0)\n+\t\td->flag = 1;\n+\twhile (s[d->i] && d->flag == 1)\n+\t{\n+\t\tif (s[++d->i] == '\\'')\n+\t\t{\n+\t\t\td->flag = 0;\n+\t\t\tbreak ;\n+\t\t}\n+\t}\n+\td->start = d->i;\n+\treturn (1);\n+}\n+\n+char\t*remove_spaces(char *str)\n+{\n+\tint\tlength;\n+\n+\tlength = ft_strlen(str);\n+\twhile (length > 0 && (str[length - 1] == ' '))\n+\t\tlength--;\n+\tstr[length] = '\\0';\n+\treturn (str);\n+}\n+\n+void\tlist_exist(t_var *list, t_short_dollar *d)\n+{\n+\tif (list != NULL)\n+\t{\n+\t\td->tmp = add_slashes(ft_strdup(list->value));\n+\t\td->size = (int)ft_strlen(d->tmp);\n+\t}\n+}\n+\n+char *remove_slashes(char *s)\n+{\n+\tint i;\n+\tint count;\n+\tchar *new;\n+\n+\tcount = 0; \n+\ti = 0;\n+\t\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] != '\\\\')\n+\t\t\tcount++;\n+\t\ti++;\n+\t}\n+\t\n+\t\n+}\n+\n+char\t*transform_for_dollar(char *s, t_data *data)\n+{\n+\tt_var\t\t\t*list;\n+\tt_short_dollar\td;\n+\n+\tinit_transform_d(&d);\n+\ts = remove_slashes(s);\n+\twhile (s[++d.i] != '\\0')\n+\t{\n+\t\td.size = 0;\n+\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n+\t\t\treturn (s);\n+\t\td.env_len = checksymbol(s + d.i + 1);\n+\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n+\t\t{\n+\t\t\td.save = s[d.i + d.env_len + 1];\n+\t\t\ts[d.i + d.env_len + 1] = '\\0';\n+\t\t\tlist = search_variable_tvar(s + d.i, data);\n+\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n+\t\t\tlist_exist(list, &d);\n+\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n+\t\t\td.i += d.size;\n+\t\t}\n+\t}\n+\treturn (remove_spaces(s));\n+}\n"
                },
                {
                    "date": 1701282154646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:22:26 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:22:34 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -87,10 +87,10 @@\n \t\tif(s[i] != '\\\\')\n \t\t\tcount++;\n \t\ti++;\n \t}\n+\tnew = malloc(sizeof)\n \t\n-\t\n }\n \n char\t*transform_for_dollar(char *s, t_data *data)\n {\n@@ -117,473 +117,4 @@\n \t\t}\n \t}\n \treturn (remove_spaces(s));\n }\n-/* ************************************************************************** */\n-/*                                                                            */\n-/*                                                        :::      ::::::::   */\n-/*   transform_dollar.c                                 :+:      :+:    :+:   */\n-/*                                                    +:+ +:+         +:+     */\n-/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n-/*                                                +#+#+#+#+#+   +#+           */\n-/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:22:16 by shhuang          ###   ########.fr       */\n-/*                                                                            */\n-/* ************************************************************************** */\n-\n-#include \"short_code.h\"\n-\n-void\tinit_transform_d(t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\td->i = -1;\n-\td->env_len = 0;\n-\td->save = 0;\n-\td->save_pre = 0;\n-\td->size = 0;\n-\td->slash_count = 0;\n-\td->start = 0;\n-\td->flag = 0;\n-}\n-\n-int\tcreate_flags(char *s, t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\tif (s[d->i] == '\\\\')\n-\t{\n-\t\twhile (s[d->i++] == '\\\\')\n-\t\t\td->slash_count++;\n-\t}\n-\telse\n-\t\td->slash_count = 0;\n-\tif (d->flag == 2 && s[d->i] == '\"')\n-\t\td->flag = 0;\n-\telse if (s[d->i] == '\"')\n-\t\td->flag = 2;\n-\tif (s[d->i] == '\\'' && d->flag == 0)\n-\t\td->flag = 1;\n-\twhile (s[d->i] && d->flag == 1)\n-\t{\n-\t\tif (s[++d->i] == '\\'')\n-\t\t{\n-\t\t\td->flag = 0;\n-\t\t\tbreak ;\n-\t\t}\n-\t}\n-\td->start = d->i;\n-\treturn (1);\n-}\n-\n-char\t*remove_spaces(char *str)\n-{\n-\tint\tlength;\n-\n-\tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' '))\n-\t\tlength--;\n-\tstr[length] = '\\0';\n-\treturn (str);\n-}\n-\n-void\tlist_exist(t_var *list, t_short_dollar *d)\n-{\n-\tif (list != NULL)\n-\t{\n-\t\td->tmp = add_slashes(ft_strdup(list->value));\n-\t\td->size = (int)ft_strlen(d->tmp);\n-\t}\n-}\n-\n-char *remove_slashes(char *s)\n-{\n-\tint i;\n-\tint count;\n-\n-\tcount = 0; \n-\ti = 0;\n-\t\n-\twhile(s[i])\n-\t{\n-\t\tif(s[i] != '\\\\')\n-\t\t\tcount++;\n-\t\ti++;\n-\t}\n-\t\n-}\n-\n-char\t*transform_for_dollar(char *s, t_data *data)\n-{\n-\tt_var\t\t\t*list;\n-\tt_short_dollar\td;\n-\n-\tinit_transform_d(&d);\n-\ts = remove_slashes(s);\n-\twhile (s[++d.i] != '\\0')\n-\t{\n-\t\td.size = 0;\n-\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n-\t\t\treturn (s);\n-\t\td.env_len = checksymbol(s + d.i + 1);\n-\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n-\t\t{\n-\t\t\td.save = s[d.i + d.env_len + 1];\n-\t\t\ts[d.i + d.env_len + 1] = '\\0';\n-\t\t\tlist = search_variable_tvar(s + d.i, data);\n-\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n-\t\t\tlist_exist(list, &d);\n-\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n-\t\t\td.i += d.size;\n-\t\t}\n-\t}\n-\treturn (remove_spaces(s));\n-}\n-/* ************************************************************************** */\n-/*                                                                            */\n-/*                                                        :::      ::::::::   */\n-/*   transform_dollar.c                                 :+:      :+:    :+:   */\n-/*                                                    +:+ +:+         +:+     */\n-/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n-/*                                                +#+#+#+#+#+   +#+           */\n-/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:22:06 by shhuang          ###   ########.fr       */\n-/*                                                                            */\n-/* ************************************************************************** */\n-\n-#include \"short_code.h\"\n-\n-void\tinit_transform_d(t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\td->i = -1;\n-\td->env_len = 0;\n-\td->save = 0;\n-\td->save_pre = 0;\n-\td->size = 0;\n-\td->slash_count = 0;\n-\td->start = 0;\n-\td->flag = 0;\n-}\n-\n-int\tcreate_flags(char *s, t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\tif (s[d->i] == '\\\\')\n-\t{\n-\t\twhile (s[d->i++] == '\\\\')\n-\t\t\td->slash_count++;\n-\t}\n-\telse\n-\t\td->slash_count = 0;\n-\tif (d->flag == 2 && s[d->i] == '\"')\n-\t\td->flag = 0;\n-\telse if (s[d->i] == '\"')\n-\t\td->flag = 2;\n-\tif (s[d->i] == '\\'' && d->flag == 0)\n-\t\td->flag = 1;\n-\twhile (s[d->i] && d->flag == 1)\n-\t{\n-\t\tif (s[++d->i] == '\\'')\n-\t\t{\n-\t\t\td->flag = 0;\n-\t\t\tbreak ;\n-\t\t}\n-\t}\n-\td->start = d->i;\n-\treturn (1);\n-}\n-\n-char\t*remove_spaces(char *str)\n-{\n-\tint\tlength;\n-\n-\tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' '))\n-\t\tlength--;\n-\tstr[length] = '\\0';\n-\treturn (str);\n-}\n-\n-void\tlist_exist(t_var *list, t_short_dollar *d)\n-{\n-\tif (list != NULL)\n-\t{\n-\t\td->tmp = add_slashes(ft_strdup(list->value));\n-\t\td->size = (int)ft_strlen(d->tmp);\n-\t}\n-}\n-\n-char *remove_slashes(char *s)\n-{\n-\tint i;\n-\tint count;\n-\n-\tcount = 0; \n-\ti = 0;\n-\t\n-\twhile(s[i])\n-\t{\n-\t\tif(s[i] != '\\\\')\n-\t\t{\n-\t\t\tcount++;\n-\t\t}\n-\t}\n-}\n-\n-char\t*transform_for_dollar(char *s, t_data *data)\n-{\n-\tt_var\t\t\t*list;\n-\tt_short_dollar\td;\n-\n-\tinit_transform_d(&d);\n-\ts = remove_slashes(s);\n-\twhile (s[++d.i] != '\\0')\n-\t{\n-\t\td.size = 0;\n-\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n-\t\t\treturn (s);\n-\t\td.env_len = checksymbol(s + d.i + 1);\n-\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n-\t\t{\n-\t\t\td.save = s[d.i + d.env_len + 1];\n-\t\t\ts[d.i + d.env_len + 1] = '\\0';\n-\t\t\tlist = search_variable_tvar(s + d.i, data);\n-\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n-\t\t\tlist_exist(list, &d);\n-\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n-\t\t\td.i += d.size;\n-\t\t}\n-\t}\n-\treturn (remove_spaces(s));\n-}\n-/* ************************************************************************** */\n-/*                                                                            */\n-/*                                                        :::      ::::::::   */\n-/*   transform_dollar.c                                 :+:      :+:    :+:   */\n-/*                                                    +:+ +:+         +:+     */\n-/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n-/*                                                +#+#+#+#+#+   +#+           */\n-/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:21:59 by shhuang          ###   ########.fr       */\n-/*                                                                            */\n-/* ************************************************************************** */\n-\n-#include \"short_code.h\"\n-\n-void\tinit_transform_d(t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\td->i = -1;\n-\td->env_len = 0;\n-\td->save = 0;\n-\td->save_pre = 0;\n-\td->size = 0;\n-\td->slash_count = 0;\n-\td->start = 0;\n-\td->flag = 0;\n-}\n-\n-int\tcreate_flags(char *s, t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\tif (s[d->i] == '\\\\')\n-\t{\n-\t\twhile (s[d->i++] == '\\\\')\n-\t\t\td->slash_count++;\n-\t}\n-\telse\n-\t\td->slash_count = 0;\n-\tif (d->flag == 2 && s[d->i] == '\"')\n-\t\td->flag = 0;\n-\telse if (s[d->i] == '\"')\n-\t\td->flag = 2;\n-\tif (s[d->i] == '\\'' && d->flag == 0)\n-\t\td->flag = 1;\n-\twhile (s[d->i] && d->flag == 1)\n-\t{\n-\t\tif (s[++d->i] == '\\'')\n-\t\t{\n-\t\t\td->flag = 0;\n-\t\t\tbreak ;\n-\t\t}\n-\t}\n-\td->start = d->i;\n-\treturn (1);\n-}\n-\n-char\t*remove_spaces(char *str)\n-{\n-\tint\tlength;\n-\n-\tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' '))\n-\t\tlength--;\n-\tstr[length] = '\\0';\n-\treturn (str);\n-}\n-\n-void\tlist_exist(t_var *list, t_short_dollar *d)\n-{\n-\tif (list != NULL)\n-\t{\n-\t\td->tmp = add_slashes(ft_strdup(list->value));\n-\t\td->size = (int)ft_strlen(d->tmp);\n-\t}\n-}\n-\n-char *remove_slashes(char *s)\n-{\n-\tint i;\n-\tint count;\n-\n-\tcount = 0; \n-\ti = 0;\n-\t\n-\twhile(s[i])\n-\t{\n-\t\tif(s[i] != '\\\\')\n-\t\t{\n-\t\t\t\n-\t\t}\n-\t}\n-}\n-\n-char\t*transform_for_dollar(char *s, t_data *data)\n-{\n-\tt_var\t\t\t*list;\n-\tt_short_dollar\td;\n-\n-\tinit_transform_d(&d);\n-\ts = remove_slashes(s);\n-\twhile (s[++d.i] != '\\0')\n-\t{\n-\t\td.size = 0;\n-\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n-\t\t\treturn (s);\n-\t\td.env_len = checksymbol(s + d.i + 1);\n-\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n-\t\t{\n-\t\t\td.save = s[d.i + d.env_len + 1];\n-\t\t\ts[d.i + d.env_len + 1] = '\\0';\n-\t\t\tlist = search_variable_tvar(s + d.i, data);\n-\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n-\t\t\tlist_exist(list, &d);\n-\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n-\t\t\td.i += d.size;\n-\t\t}\n-\t}\n-\treturn (remove_spaces(s));\n-}\n-/* ************************************************************************** */\n-/*                                                                            */\n-/*                                                        :::      ::::::::   */\n-/*   transform_dollar.c                                 :+:      :+:    :+:   */\n-/*                                                    +:+ +:+         +:+     */\n-/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n-/*                                                +#+#+#+#+#+   +#+           */\n-/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:21:49 by shhuang          ###   ########.fr       */\n-/*                                                                            */\n-/* ************************************************************************** */\n-\n-#include \"short_code.h\"\n-\n-void\tinit_transform_d(t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\td->i = -1;\n-\td->env_len = 0;\n-\td->save = 0;\n-\td->save_pre = 0;\n-\td->size = 0;\n-\td->slash_count = 0;\n-\td->start = 0;\n-\td->flag = 0;\n-}\n-\n-int\tcreate_flags(char *s, t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\tif (s[d->i] == '\\\\')\n-\t{\n-\t\twhile (s[d->i++] == '\\\\')\n-\t\t\td->slash_count++;\n-\t}\n-\telse\n-\t\td->slash_count = 0;\n-\tif (d->flag == 2 && s[d->i] == '\"')\n-\t\td->flag = 0;\n-\telse if (s[d->i] == '\"')\n-\t\td->flag = 2;\n-\tif (s[d->i] == '\\'' && d->flag == 0)\n-\t\td->flag = 1;\n-\twhile (s[d->i] && d->flag == 1)\n-\t{\n-\t\tif (s[++d->i] == '\\'')\n-\t\t{\n-\t\t\td->flag = 0;\n-\t\t\tbreak ;\n-\t\t}\n-\t}\n-\td->start = d->i;\n-\treturn (1);\n-}\n-\n-char\t*remove_spaces(char *str)\n-{\n-\tint\tlength;\n-\n-\tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' '))\n-\t\tlength--;\n-\tstr[length] = '\\0';\n-\treturn (str);\n-}\n-\n-void\tlist_exist(t_var *list, t_short_dollar *d)\n-{\n-\tif (list != NULL)\n-\t{\n-\t\td->tmp = add_slashes(ft_strdup(list->value));\n-\t\td->size = (int)ft_strlen(d->tmp);\n-\t}\n-}\n-\n-char *remove_slashes(char *s)\n-{\n-\tint i; \n-\ti = 0;\n-\t\n-\twhile(s[i])\n-\t{\n-\t\tif(s[i] != '\\\\')\n-\t\t{\n-\t\t\t\n-\t\t}\n-\t}\n-}\n-\n-char\t*transform_for_dollar(char *s, t_data *data)\n-{\n-\tt_var\t\t\t*list;\n-\tt_short_dollar\td;\n-\n-\tinit_transform_d(&d);\n-\ts = remove_slashes(s);\n-\twhile (s[++d.i] != '\\0')\n-\t{\n-\t\td.size = 0;\n-\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n-\t\t\treturn (s);\n-\t\td.env_len = checksymbol(s + d.i + 1);\n-\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n-\t\t{\n-\t\t\td.save = s[d.i + d.env_len + 1];\n-\t\t\ts[d.i + d.env_len + 1] = '\\0';\n-\t\t\tlist = search_variable_tvar(s + d.i, data);\n-\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n-\t\t\tlist_exist(list, &d);\n-\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n-\t\t\td.i += d.size;\n-\t\t}\n-\t}\n-\treturn (remove_spaces(s));\n-}\n"
                },
                {
                    "date": 1701282165506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:22:34 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:22:45 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -87,9 +87,9 @@\n \t\tif(s[i] != '\\\\')\n \t\t\tcount++;\n \t\ti++;\n \t}\n-\tnew = malloc(sizeof)\n+\tnew = ft_calloc(sizeof(char) * )\n \t\n }\n \n char\t*transform_for_dollar(char *s, t_data *data)\n"
                },
                {
                    "date": 1701282211257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   transform_dollar.c                                 :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:23:31 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+void\tinit_transform_d(t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\td->i = -1;\n+\td->env_len = 0;\n+\td->save = 0;\n+\td->save_pre = 0;\n+\td->size = 0;\n+\td->slash_count = 0;\n+\td->start = 0;\n+\td->flag = 0;\n+}\n+\n+int\tcreate_flags(char *s, t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\tif (s[d->i] == '\\\\')\n+\t{\n+\t\twhile (s[d->i++] == '\\\\')\n+\t\t\td->slash_count++;\n+\t}\n+\telse\n+\t\td->slash_count = 0;\n+\tif (d->flag == 2 && s[d->i] == '\"')\n+\t\td->flag = 0;\n+\telse if (s[d->i] == '\"')\n+\t\td->flag = 2;\n+\tif (s[d->i] == '\\'' && d->flag == 0)\n+\t\td->flag = 1;\n+\twhile (s[d->i] && d->flag == 1)\n+\t{\n+\t\tif (s[++d->i] == '\\'')\n+\t\t{\n+\t\t\td->flag = 0;\n+\t\t\tbreak ;\n+\t\t}\n+\t}\n+\td->start = d->i;\n+\treturn (1);\n+}\n+\n+char\t*remove_spaces(char *str)\n+{\n+\tint\tlength;\n+\n+\tlength = ft_strlen(str);\n+\twhile (length > 0 && (str[length - 1] == ' '))\n+\t\tlength--;\n+\tstr[length] = '\\0';\n+\treturn (str);\n+}\n+\n+void\tlist_exist(t_var *list, t_short_dollar *d)\n+{\n+\tif (list != NULL)\n+\t{\n+\t\td->tmp = add_slashes(ft_strdup(list->value));\n+\t\td->size = (int)ft_strlen(d->tmp);\n+\t}\n+}\n+\n+char *remove_slashes(char *s)\n+{\n+\tint i;\n+\tint count;\n+\tchar *new;\n+\n+\tcount = 0; \n+\ti = 0;\n+\t\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] != '\\\\')\n+\t\t\tcount++;\n+\t\ti++;\n+\t}\n+\tnew = ft_calloc(sizeof(char), count);\n+\t\n+\t\n+}\n+\n+char\t*transform_for_dollar(char *s, t_data *data)\n+{\n+\tt_var\t\t\t*list;\n+\tt_short_dollar\td;\n+\n+\tinit_transform_d(&d);\n+\ts = remove_slashes(s);\n+\twhile (s[++d.i] != '\\0')\n+\t{\n+\t\td.size = 0;\n+\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n+\t\t\treturn (s);\n+\t\td.env_len = checksymbol(s + d.i + 1);\n+\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n+\t\t{\n+\t\t\td.save = s[d.i + d.env_len + 1];\n+\t\t\ts[d.i + d.env_len + 1] = '\\0';\n+\t\t\tlist = search_variable_tvar(s + d.i, data);\n+\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n+\t\t\tlist_exist(list, &d);\n+\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n+\t\t\td.i += d.size;\n+\t\t}\n+\t}\n+\treturn (remove_spaces(s));\n+}\n"
                },
                {
                    "date": 1701282251313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   transform_dollar.c                                 :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:24:11 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+void\tinit_transform_d(t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\td->i = -1;\n+\td->env_len = 0;\n+\td->save = 0;\n+\td->save_pre = 0;\n+\td->size = 0;\n+\td->slash_count = 0;\n+\td->start = 0;\n+\td->flag = 0;\n+}\n+\n+int\tcreate_flags(char *s, t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\tif (s[d->i] == '\\\\')\n+\t{\n+\t\twhile (s[d->i++] == '\\\\')\n+\t\t\td->slash_count++;\n+\t}\n+\telse\n+\t\td->slash_count = 0;\n+\tif (d->flag == 2 && s[d->i] == '\"')\n+\t\td->flag = 0;\n+\telse if (s[d->i] == '\"')\n+\t\td->flag = 2;\n+\tif (s[d->i] == '\\'' && d->flag == 0)\n+\t\td->flag = 1;\n+\twhile (s[d->i] && d->flag == 1)\n+\t{\n+\t\tif (s[++d->i] == '\\'')\n+\t\t{\n+\t\t\td->flag = 0;\n+\t\t\tbreak ;\n+\t\t}\n+\t}\n+\td->start = d->i;\n+\treturn (1);\n+}\n+\n+char\t*remove_spaces(char *str)\n+{\n+\tint\tlength;\n+\n+\tlength = ft_strlen(str);\n+\twhile (length > 0 && (str[length - 1] == ' '))\n+\t\tlength--;\n+\tstr[length] = '\\0';\n+\treturn (str);\n+}\n+\n+void\tlist_exist(t_var *list, t_short_dollar *d)\n+{\n+\tif (list != NULL)\n+\t{\n+\t\td->tmp = add_slashes(ft_strdup(list->value));\n+\t\td->size = (int)ft_strlen(d->tmp);\n+\t}\n+}\n+\n+char *remove_slashes(char *s)\n+{\n+\tint i;\n+\tint count;\n+\tchar *new;\n+\n+\tcount = 0; \n+\ti = 0;\n+\t\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] != '\\\\')\n+\t\t\tcount++;\n+\t\ti++;\n+\t}\n+\tnew = ft_calloc(sizeof(char), count);\n+\t\twhile(s[i])\n+\t{\n+\t\tif(s[i] != '\\\\')\n+\t\t\tcount++;\n+\t\ti++;\n+\t}\n+}\n+\n+char\t*transform_for_dollar(char *s, t_data *data)\n+{\n+\tt_var\t\t\t*list;\n+\tt_short_dollar\td;\n+\n+\tinit_transform_d(&d);\n+\ts = remove_slashes(s);\n+\twhile (s[++d.i] != '\\0')\n+\t{\n+\t\td.size = 0;\n+\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n+\t\t\treturn (s);\n+\t\td.env_len = checksymbol(s + d.i + 1);\n+\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n+\t\t{\n+\t\t\td.save = s[d.i + d.env_len + 1];\n+\t\t\ts[d.i + d.env_len + 1] = '\\0';\n+\t\t\tlist = search_variable_tvar(s + d.i, data);\n+\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n+\t\t\tlist_exist(list, &d);\n+\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n+\t\t\td.i += d.size;\n+\t\t}\n+\t}\n+\treturn (remove_spaces(s));\n+}\n"
                },
                {
                    "date": 1701282290338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   transform_dollar.c                                 :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:24:50 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+void\tinit_transform_d(t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\td->i = -1;\n+\td->env_len = 0;\n+\td->save = 0;\n+\td->save_pre = 0;\n+\td->size = 0;\n+\td->slash_count = 0;\n+\td->start = 0;\n+\td->flag = 0;\n+}\n+\n+int\tcreate_flags(char *s, t_short_dollar *d)\n+{\n+\td->tmp = NULL;\n+\tif (s[d->i] == '\\\\')\n+\t{\n+\t\twhile (s[d->i++] == '\\\\')\n+\t\t\td->slash_count++;\n+\t}\n+\telse\n+\t\td->slash_count = 0;\n+\tif (d->flag == 2 && s[d->i] == '\"')\n+\t\td->flag = 0;\n+\telse if (s[d->i] == '\"')\n+\t\td->flag = 2;\n+\tif (s[d->i] == '\\'' && d->flag == 0)\n+\t\td->flag = 1;\n+\twhile (s[d->i] && d->flag == 1)\n+\t{\n+\t\tif (s[++d->i] == '\\'')\n+\t\t{\n+\t\t\td->flag = 0;\n+\t\t\tbreak ;\n+\t\t}\n+\t}\n+\td->start = d->i;\n+\treturn (1);\n+}\n+\n+char\t*remove_spaces(char *str)\n+{\n+\tint\tlength;\n+\n+\tlength = ft_strlen(str);\n+\twhile (length > 0 && (str[length - 1] == ' '))\n+\t\tlength--;\n+\tstr[length] = '\\0';\n+\treturn (str);\n+}\n+\n+void\tlist_exist(t_var *list, t_short_dollar *d)\n+{\n+\tif (list != NULL)\n+\t{\n+\t\td->tmp = add_slashes(ft_strdup(list->value));\n+\t\td->size = (int)ft_strlen(d->tmp);\n+\t}\n+}\n+\n+char *remove_slashes(char *s)\n+{\n+\tint i;\n+\tint count;\n+\tchar *new;\n+\n+\tcount = 0; \n+\ti = 0;\n+\t\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] != '\\\\')\n+\t\t\tcount++;\n+\t\ti++;\n+\t}\n+\tnew = ft_calloc(sizeof(char), count);\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] != '\\\\')\n+\t\t\t\n+\t\ti++;\n+\t}\n+}\n+\n+char\t*transform_for_dollar(char *s, t_data *data)\n+{\n+\tt_var\t\t\t*list;\n+\tt_short_dollar\td;\n+\n+\tinit_transform_d(&d);\n+\ts = remove_slashes(s);\n+\twhile (s[++d.i] != '\\0')\n+\t{\n+\t\td.size = 0;\n+\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n+\t\t\treturn (s);\n+\t\td.env_len = checksymbol(s + d.i + 1);\n+\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n+\t\t{\n+\t\t\td.save = s[d.i + d.env_len + 1];\n+\t\t\ts[d.i + d.env_len + 1] = '\\0';\n+\t\t\tlist = search_variable_tvar(s + d.i, data);\n+\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n+\t\t\tlist_exist(list, &d);\n+\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n+\t\t\td.i += d.size;\n+\t\t}\n+\t}\n+\treturn (remove_spaces(s));\n+}\n"
                },
                {
                    "date": 1701282297834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:24:50 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:24:57 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -91,9 +91,9 @@\n \tnew = ft_calloc(sizeof(char), count);\n \twhile(s[i])\n \t{\n \t\tif(s[i] != '\\\\')\n-\t\t\t\n+\t\t\tnew[x] = s[i]\n \t\ti++;\n \t}\n }\n \n@@ -122,370 +122,4 @@\n \t\t}\n \t}\n \treturn (remove_spaces(s));\n }\n-/* ************************************************************************** */\n-/*                                                                            */\n-/*                                                        :::      ::::::::   */\n-/*   transform_dollar.c                                 :+:      :+:    :+:   */\n-/*                                                    +:+ +:+         +:+     */\n-/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n-/*                                                +#+#+#+#+#+   +#+           */\n-/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:24:11 by shhuang          ###   ########.fr       */\n-/*                                                                            */\n-/* ************************************************************************** */\n-\n-#include \"short_code.h\"\n-\n-void\tinit_transform_d(t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\td->i = -1;\n-\td->env_len = 0;\n-\td->save = 0;\n-\td->save_pre = 0;\n-\td->size = 0;\n-\td->slash_count = 0;\n-\td->start = 0;\n-\td->flag = 0;\n-}\n-\n-int\tcreate_flags(char *s, t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\tif (s[d->i] == '\\\\')\n-\t{\n-\t\twhile (s[d->i++] == '\\\\')\n-\t\t\td->slash_count++;\n-\t}\n-\telse\n-\t\td->slash_count = 0;\n-\tif (d->flag == 2 && s[d->i] == '\"')\n-\t\td->flag = 0;\n-\telse if (s[d->i] == '\"')\n-\t\td->flag = 2;\n-\tif (s[d->i] == '\\'' && d->flag == 0)\n-\t\td->flag = 1;\n-\twhile (s[d->i] && d->flag == 1)\n-\t{\n-\t\tif (s[++d->i] == '\\'')\n-\t\t{\n-\t\t\td->flag = 0;\n-\t\t\tbreak ;\n-\t\t}\n-\t}\n-\td->start = d->i;\n-\treturn (1);\n-}\n-\n-char\t*remove_spaces(char *str)\n-{\n-\tint\tlength;\n-\n-\tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' '))\n-\t\tlength--;\n-\tstr[length] = '\\0';\n-\treturn (str);\n-}\n-\n-void\tlist_exist(t_var *list, t_short_dollar *d)\n-{\n-\tif (list != NULL)\n-\t{\n-\t\td->tmp = add_slashes(ft_strdup(list->value));\n-\t\td->size = (int)ft_strlen(d->tmp);\n-\t}\n-}\n-\n-char *remove_slashes(char *s)\n-{\n-\tint i;\n-\tint count;\n-\tchar *new;\n-\n-\tcount = 0; \n-\ti = 0;\n-\t\n-\twhile(s[i])\n-\t{\n-\t\tif(s[i] != '\\\\')\n-\t\t\tcount++;\n-\t\ti++;\n-\t}\n-\tnew = ft_calloc(sizeof(char), count);\n-\t\twhile(s[i])\n-\t{\n-\t\tif(s[i] != '\\\\')\n-\t\t\tcount++;\n-\t\ti++;\n-\t}\n-}\n-\n-char\t*transform_for_dollar(char *s, t_data *data)\n-{\n-\tt_var\t\t\t*list;\n-\tt_short_dollar\td;\n-\n-\tinit_transform_d(&d);\n-\ts = remove_slashes(s);\n-\twhile (s[++d.i] != '\\0')\n-\t{\n-\t\td.size = 0;\n-\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n-\t\t\treturn (s);\n-\t\td.env_len = checksymbol(s + d.i + 1);\n-\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n-\t\t{\n-\t\t\td.save = s[d.i + d.env_len + 1];\n-\t\t\ts[d.i + d.env_len + 1] = '\\0';\n-\t\t\tlist = search_variable_tvar(s + d.i, data);\n-\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n-\t\t\tlist_exist(list, &d);\n-\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n-\t\t\td.i += d.size;\n-\t\t}\n-\t}\n-\treturn (remove_spaces(s));\n-}\n-/* ************************************************************************** */\n-/*                                                                            */\n-/*                                                        :::      ::::::::   */\n-/*   transform_dollar.c                                 :+:      :+:    :+:   */\n-/*                                                    +:+ +:+         +:+     */\n-/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n-/*                                                +#+#+#+#+#+   +#+           */\n-/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:23:31 by shhuang          ###   ########.fr       */\n-/*                                                                            */\n-/* ************************************************************************** */\n-\n-#include \"short_code.h\"\n-\n-void\tinit_transform_d(t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\td->i = -1;\n-\td->env_len = 0;\n-\td->save = 0;\n-\td->save_pre = 0;\n-\td->size = 0;\n-\td->slash_count = 0;\n-\td->start = 0;\n-\td->flag = 0;\n-}\n-\n-int\tcreate_flags(char *s, t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\tif (s[d->i] == '\\\\')\n-\t{\n-\t\twhile (s[d->i++] == '\\\\')\n-\t\t\td->slash_count++;\n-\t}\n-\telse\n-\t\td->slash_count = 0;\n-\tif (d->flag == 2 && s[d->i] == '\"')\n-\t\td->flag = 0;\n-\telse if (s[d->i] == '\"')\n-\t\td->flag = 2;\n-\tif (s[d->i] == '\\'' && d->flag == 0)\n-\t\td->flag = 1;\n-\twhile (s[d->i] && d->flag == 1)\n-\t{\n-\t\tif (s[++d->i] == '\\'')\n-\t\t{\n-\t\t\td->flag = 0;\n-\t\t\tbreak ;\n-\t\t}\n-\t}\n-\td->start = d->i;\n-\treturn (1);\n-}\n-\n-char\t*remove_spaces(char *str)\n-{\n-\tint\tlength;\n-\n-\tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' '))\n-\t\tlength--;\n-\tstr[length] = '\\0';\n-\treturn (str);\n-}\n-\n-void\tlist_exist(t_var *list, t_short_dollar *d)\n-{\n-\tif (list != NULL)\n-\t{\n-\t\td->tmp = add_slashes(ft_strdup(list->value));\n-\t\td->size = (int)ft_strlen(d->tmp);\n-\t}\n-}\n-\n-char *remove_slashes(char *s)\n-{\n-\tint i;\n-\tint count;\n-\tchar *new;\n-\n-\tcount = 0; \n-\ti = 0;\n-\t\n-\twhile(s[i])\n-\t{\n-\t\tif(s[i] != '\\\\')\n-\t\t\tcount++;\n-\t\ti++;\n-\t}\n-\tnew = ft_calloc(sizeof(char), count);\n-\t\n-\t\n-}\n-\n-char\t*transform_for_dollar(char *s, t_data *data)\n-{\n-\tt_var\t\t\t*list;\n-\tt_short_dollar\td;\n-\n-\tinit_transform_d(&d);\n-\ts = remove_slashes(s);\n-\twhile (s[++d.i] != '\\0')\n-\t{\n-\t\td.size = 0;\n-\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n-\t\t\treturn (s);\n-\t\td.env_len = checksymbol(s + d.i + 1);\n-\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n-\t\t{\n-\t\t\td.save = s[d.i + d.env_len + 1];\n-\t\t\ts[d.i + d.env_len + 1] = '\\0';\n-\t\t\tlist = search_variable_tvar(s + d.i, data);\n-\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n-\t\t\tlist_exist(list, &d);\n-\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n-\t\t\td.i += d.size;\n-\t\t}\n-\t}\n-\treturn (remove_spaces(s));\n-}\n-/* ************************************************************************** */\n-/*                                                                            */\n-/*                                                        :::      ::::::::   */\n-/*   transform_dollar.c                                 :+:      :+:    :+:   */\n-/*                                                    +:+ +:+         +:+     */\n-/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n-/*                                                +#+#+#+#+#+   +#+           */\n-/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:22:45 by shhuang          ###   ########.fr       */\n-/*                                                                            */\n-/* ************************************************************************** */\n-\n-#include \"short_code.h\"\n-\n-void\tinit_transform_d(t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\td->i = -1;\n-\td->env_len = 0;\n-\td->save = 0;\n-\td->save_pre = 0;\n-\td->size = 0;\n-\td->slash_count = 0;\n-\td->start = 0;\n-\td->flag = 0;\n-}\n-\n-int\tcreate_flags(char *s, t_short_dollar *d)\n-{\n-\td->tmp = NULL;\n-\tif (s[d->i] == '\\\\')\n-\t{\n-\t\twhile (s[d->i++] == '\\\\')\n-\t\t\td->slash_count++;\n-\t}\n-\telse\n-\t\td->slash_count = 0;\n-\tif (d->flag == 2 && s[d->i] == '\"')\n-\t\td->flag = 0;\n-\telse if (s[d->i] == '\"')\n-\t\td->flag = 2;\n-\tif (s[d->i] == '\\'' && d->flag == 0)\n-\t\td->flag = 1;\n-\twhile (s[d->i] && d->flag == 1)\n-\t{\n-\t\tif (s[++d->i] == '\\'')\n-\t\t{\n-\t\t\td->flag = 0;\n-\t\t\tbreak ;\n-\t\t}\n-\t}\n-\td->start = d->i;\n-\treturn (1);\n-}\n-\n-char\t*remove_spaces(char *str)\n-{\n-\tint\tlength;\n-\n-\tlength = ft_strlen(str);\n-\twhile (length > 0 && (str[length - 1] == ' '))\n-\t\tlength--;\n-\tstr[length] = '\\0';\n-\treturn (str);\n-}\n-\n-void\tlist_exist(t_var *list, t_short_dollar *d)\n-{\n-\tif (list != NULL)\n-\t{\n-\t\td->tmp = add_slashes(ft_strdup(list->value));\n-\t\td->size = (int)ft_strlen(d->tmp);\n-\t}\n-}\n-\n-char *remove_slashes(char *s)\n-{\n-\tint i;\n-\tint count;\n-\tchar *new;\n-\n-\tcount = 0; \n-\ti = 0;\n-\t\n-\twhile(s[i])\n-\t{\n-\t\tif(s[i] != '\\\\')\n-\t\t\tcount++;\n-\t\ti++;\n-\t}\n-\tnew = ft_calloc(sizeof(char) * )\n-\t\n-}\n-\n-char\t*transform_for_dollar(char *s, t_data *data)\n-{\n-\tt_var\t\t\t*list;\n-\tt_short_dollar\td;\n-\n-\tinit_transform_d(&d);\n-\ts = remove_slashes(s);\n-\twhile (s[++d.i] != '\\0')\n-\t{\n-\t\td.size = 0;\n-\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n-\t\t\treturn (s);\n-\t\td.env_len = checksymbol(s + d.i + 1);\n-\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n-\t\t{\n-\t\t\td.save = s[d.i + d.env_len + 1];\n-\t\t\ts[d.i + d.env_len + 1] = '\\0';\n-\t\t\tlist = search_variable_tvar(s + d.i, data);\n-\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n-\t\t\tlist_exist(list, &d);\n-\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n-\t\t\td.i += d.size;\n-\t\t}\n-\t}\n-\treturn (remove_spaces(s));\n-}\n"
                },
                {
                    "date": 1701282304238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:24:59 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:25:04 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -75,8 +75,9 @@\n \n char *remove_slashes(char *s)\n {\n \tint i;\n+\tint x;\n \tint count;\n \tchar *new;\n \n \tcount = 0; \n"
                },
                {
                    "date": 1701282332973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/29 19:25:21 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 19:25:32 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"short_code.h\"\n@@ -95,8 +95,9 @@\n \t{\n \t\tif(s[i] != '\\\\')\n \t\t\tnew[x] = s[i];\n \t\ti++;\n+\t\t\n \t}\n }\n \n char\t*transform_for_dollar(char *s, t_data *data)\n"
                }
            ],
            "date": 1701281961712,
            "name": "Commit-0",
            "content": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   transform_dollar.c                                 :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/11/25 15:22:49 by shhuang           #+#    #+#             */\n/*   Updated: 2023/11/29 19:19:21 by shhuang          ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"short_code.h\"\n\nvoid\tinit_transform_d(t_short_dollar *d)\n{\n\td->tmp = NULL;\n\td->i = -1;\n\td->env_len = 0;\n\td->save = 0;\n\td->save_pre = 0;\n\td->size = 0;\n\td->slash_count = 0;\n\td->start = 0;\n\td->flag = 0;\n}\n\nint\tcreate_flags(char *s, t_short_dollar *d)\n{\n\td->tmp = NULL;\n\tif (s[d->i] == '\\\\')\n\t{\n\t\twhile (s[d->i++] == '\\\\')\n\t\t\td->slash_count++;\n\t}\n\telse\n\t\td->slash_count = 0;\n\tif (d->flag == 2 && s[d->i] == '\"')\n\t\td->flag = 0;\n\telse if (s[d->i] == '\"')\n\t\td->flag = 2;\n\tif (s[d->i] == '\\'' && d->flag == 0)\n\t\td->flag = 1;\n\twhile (s[d->i] && d->flag == 1)\n\t{\n\t\tif (s[++d->i] == '\\'')\n\t\t{\n\t\t\td->flag = 0;\n\t\t\tbreak ;\n\t\t}\n\t}\n\td->start = d->i;\n\treturn (1);\n}\n\nchar\t*remove_spaces(char *str)\n{\n\tint\tlength;\n\n\tlength = ft_strlen(str);\n\twhile (length > 0 && (str[length - 1] == ' ')\n\t\tlength--;\n\tstr[length] = '\\0';\n\treturn (str);\n}\n\nvoid\tlist_exist(t_var *list, t_short_dollar *d)\n{\n\tif (list != NULL)\n\t{\n\t\td->tmp = add_slashes(ft_strdup(list->value));\n\t\td->size = (int)ft_strlen(d->tmp);\n\t}\n}\n\nchar\t*transform_for_dollar(char *s, t_data *data)\n{\n\tt_var\t\t\t*list;\n\tt_short_dollar\td;\n\n\tinit_transform_d(&d);\n\twhile (s[++d.i] != '\\0')\n\t{\n\t\td.size = 0;\n\t\tif (create_flags(s, &d) && s[d.i] == '\\0')\n\t\t\treturn (s);\n\t\td.env_len = checksymbol(s + d.i + 1);\n\t\tif (s[d.i] == '$' && d.slash_count % 2 == 0 && d.env_len)\n\t\t{\n\t\t\td.save = s[d.i + d.env_len + 1];\n\t\t\ts[d.i + d.env_len + 1] = '\\0';\n\t\t\tlist = search_variable_tvar(s + d.i, data);\n\t\t\ts[d.i + d.env_len + 1] = (char)d.save;\n\t\t\tlist_exist(list, &d);\n\t\t\ts = replace_for_new_str(s, d.tmp, d.start, &d.i);\n\t\t\td.i += d.size;\n\t\t}\n\t}\n\treturn (remove_spaces(s));\n}\n"
        }
    ]
}