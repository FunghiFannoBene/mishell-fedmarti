{
    "sourceFile": "transform_dollar4.c",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1700392175124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1700392232175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/17 03:05:01 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/19 12:09:35 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/19 12:10:32 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /******************************************************************************/\n \n #include \"short_code.h\"\n@@ -43,8 +43,9 @@\n \t\t(*di)++;\n \t}\n \treturn(result);\n }\n+\n // da valutare aggiunta per virgolette incluse in virgolette\n // char *virgolette_content(char *s)\n // {\n // \tint i = 0;\n"
                },
                {
                    "date": 1700392681343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/11/17 03:05:01 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/19 12:10:32 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/19 12:18:01 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /******************************************************************************/\n \n #include \"short_code.h\"\n@@ -43,9 +43,8 @@\n \t\t(*di)++;\n \t}\n \treturn(result);\n }\n-\n // da valutare aggiunta per virgolette incluse in virgolette\n // char *virgolette_content(char *s)\n // {\n // \tint i = 0;\n@@ -68,4 +67,31 @@\n // \tx[z]= '\\0';\n // \tprintf(\"%s\\n\", x);\n // \treturn (x);\n // }\n+\n+char *remove_useless(char *s)\n+{\n+\tchar *newstr = ft_calloc(ft_strlen(s)+1 , 1);\n+\tint i = 0;\n+\tint x = 0;\n+\twhile(s[i])\n+\t{\n+\t\tif(s[i] == '\"')\n+\t\t{\n+\t\t\ti++;\n+\t\t\twhile(s[i] && s[i] != '\"')\n+\t\t\t{\n+\t\t\t\tnewstr[x++] = s[i];\n+\t\t\t\ti++;\n+\t\t\t}\n+\t\t\tif(s[i] == '\\0')\n+\t\t\t\tbreak;\n+\t\t}\n+\t\telse if(s[i] != '\\'')\n+\t\t\tnewstr[x++] = s[i];\n+\t\ti++;\n+\t}\n+\tnewstr[x] = '\\0';\n+\tprintf(\"\\n\\n%s\\n\\n\", newstr);\n+\treturn(newstr);\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1700392175124,
            "name": "Commit-0",
            "content": "/******************************************************************************/\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   transform_dollar4.c                                :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/11/17 03:05:01 by shhuang           #+#    #+#             */\n/*   Updated: 2023/11/19 12:09:35 by shhuang          ###   ########.fr       */\n/*                                                                            */\n/******************************************************************************/\n\n#include \"short_code.h\"\n\nint check_virgolette_doppie(char *s, int i)\n{\n\tint count_double = 0;\n\tint x = i;\n\twhile (s[x])\n\t{\n\t\tif (s[x] == '\"' && !(s[x] == '\\\\' && s[x + 1] == '\"'))\n\t\t\tcount_double++;\n\t\tx++;\n\t}\n\tif (count_double % 2)\n\t\treturn (-1);\n\treturn (0);\n}\n\nchar *check_and_addx(char *start, char *tmp, char *position, int *di)\n{\n\tchar *result;\n\n\tresult = NULL;\n\tif((check_virgolette_doppie(start, 0) == -1))\n\t{\n\t\tresult = ft_multistrjoin((char *[]){start, tmp, position, NULL});\n\t\t(*di)--;\n\t}\n\telse\n\t{\n\t\tresult = ft_multistrjoin((char *[]){start, \"'\", tmp, \"'\", position, NULL});\n\t\t(*di)++;\n\t}\n\treturn(result);\n}\n// da valutare aggiunta per virgolette incluse in virgolette\n// char *virgolette_content(char *s)\n// {\n// \tint i = 0;\n// \tchar *x = calloc (ft_strlen(s)+1, 1); \n// \tint z = 0;\n// \twhile(s[i])\n// \t{\n// \t\tif(s[i] == '\"' || s[i] == '\\'')\n// \t\t{\n// \t\t\twhile(s[i] != '\"' || s[i] != '\\'')\n// \t\t\t{\n// \t\t\t\tx[z++] = s[i++];\n// \t\t\t\ti++;\n\t\t\t\t\n// \t\t\t}\n// \t\t}\n// \t\telse\n// \t\t\tx[z++] = s[i++];\n// \t}\n// \tx[z]= '\\0';\n// \tprintf(\"%s\\n\", x);\n// \treturn (x);\n// }\n"
        }
    ]
}