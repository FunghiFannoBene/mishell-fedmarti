{
    "sourceFile": "command_list7.c",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1700393869984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1700394713000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+/******************************************************************************/\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   command_list7.c                                    :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/10/30 17:44:53 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/19 12:51:52 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/******************************************************************************/\n+\n+#include \"short_code.h\"\n+\n+int\tcheck_all_end(char *s, int *i, t_redirect **command, int *variabile)\n+{\n+\t*variabile = end_check(s, i, command);\n+\tif (*variabile == -1)\n+\t\treturn (-2);\n+\telse if (*variabile == -2)\n+\t\treturn (-1);\n+\telse if (*variabile == -3)\n+\t\treturn (0);\n+\t*variabile = flag_zero_space(s, i, command);\n+\tif (*variabile == -1)\n+\t\treturn (-2);\n+\tif (*variabile == -2)\n+\t\treturn (1);\n+\treturn (2);\n+}\n+\n+\n+int\tsize_of_command(char *s, int *i, t_redirect **head, t_pnode *structure)\n+{\n+\tt_redirect\t*command;\n+\tint\t\t\tvariabile;\n+\n+\tinit_size_of_command(structure, &command, head, i);\n+\twhile (s[*i])\n+\t{\n+\t\tif (skip_and_endstring(s, i))\n+\t\t\treturn (-1);\n+\t\tif (s[*i] == '|' || s[*i] == '<' || s[*i] == '>')\n+\t\t\treturn (0);\n+\t\tif (assign_flag(s, i, &command) == -1)\n+\t\t\tcontinue ;\n+\t\twhile (s[*i])\n+\t\t{\n+\t\t\tif (check_slashes(s, i, &command) == -1)\n+\t\t\t\tcontinue ;\n+\t\t\tvariabile = check_all_end(s, i, &command, &variabile);\n+\t\t\tif (variabile == -1 || variabile == 0 || variabile == 1)\n+\t\t\t\treturn (variabile);\n+\t\t\telse if (variabile == -2 || break_or_add(s, i, command))\n+\t\t\t\tbreak ;\n+\t\t}\n+\t}\n+\treturn (1);\n+}\n+\n+void\tfree_t_pnode_list(t_pnode *structure_head)\n+{\n+\tt_pnode\t*current;\n+\tt_pnode\t*next_node;\n+\tchar\t**current_args;\n+\tint\t\ti;\n+\n+\ti = -1;\n+\tnext_node = NULL;\n+\tcurrent = structure_head;\n+\twhile (current != NULL)\n+\t{\n+\t\tnext_node = current->output;\n+\t\tcurrent_args = current->args;\n+\t\tif (current_args != NULL)\n+\t\t{\n+\t\t\twhile (current_args[++i] != NULL)\n+\t\t\t{\n+\t\t\t\tfree(current_args[i]);\n+\t\t\t}\n+\t\t\tfree(current_args);\n+\t\t}\n+\t\tfree(current);\n+\t\tcurrent = next_node;\n+\t}\n+}\n+\n+int\tinit_command(t_command *c, char *s)\n+{\n+\tc->command = NULL;\n+\tc->structure_head = NULL;\n+\tc->structure_actual = NULL;\n+\tc->command_record = 0;\n+\tc->head = NULL;\n+\tc->i = 0;\n+\tif (!s)\n+\t\treturn (-1);\n+\tif (check_virgolette_dispari_start(s, c->i))\n+\t{\n+\t\tprintf(\"Virgolette dispari. Comando invalido.\\n\");\n+\t\treturn (-1);\n+\t}\n+\treturn (1);\n+}\n+\n+int\tcheck_continuation(char *s, t_command *c)\n+{\n+\tif (s[c->i] == '\\0')\n+\t\treturn (1);\n+\tc->command = NULL;\n+\tc->head = NULL;\n+\tc->structure = malloc(sizeof(t_pnode));\n+\tft_memset(c->structure, 0, sizeof(t_pnode));\n+\treturn (0);\n+}\n"
                },
                {
                    "date": 1700394722300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,114 @@\n+/******************************************************************************/\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   command_list7.c                                    :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/10/30 17:44:53 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/19 12:52:02 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/******************************************************************************/\n+\n+#include \"short_code.h\"\n+\n+int\tcheck_all_end(char *s, int *i, t_redirect **command, int *variabile)\n+{\n+\t*variabile = end_check(s, i, command);\n+\tif (*variabile == -1)\n+\t\treturn (-2);\n+\telse if (*variabile == -2)\n+\t\treturn (-1);\n+\telse if (*variabile == -3)\n+\t\treturn (0);\n+\t*variabile = flag_zero_space(s, i, command);\n+\tif (*variabile == -1)\n+\t\treturn (-2);\n+\tif (*variabile == -2)\n+\t\treturn (1);\n+\treturn (2);\n+}\n+\n+int\tsize_of_command(char *s, int *i, t_redirect **head, t_pnode *structure)\n+{\n+\tt_redirect\t*command;\n+\tint\t\t\tvariabile;\n+\n+\tinit_size_of_command(structure, &command, head, i);\n+\twhile (s[*i])\n+\t{\n+\t\tif (skip_and_endstring(s, i))\n+\t\t\treturn (-1);\n+\t\tif (s[*i] == '|' || s[*i] == '<' || s[*i] == '>')\n+\t\t\treturn (0);\n+\t\tif (assign_flag(s, i, &command) == -1)\n+\t\t\tcontinue ;\n+\t\twhile (s[*i])\n+\t\t{\n+\t\t\tif (check_slashes(s, i, &command) == -1)\n+\t\t\t\tcontinue ;\n+\t\t\tvariabile = check_all_end(s, i, &command, &variabile);\n+\t\t\tif (variabile == -1 || variabile == 0 || variabile == 1)\n+\t\t\t\treturn (variabile);\n+\t\t\telse if (variabile == -2 || break_or_add(s, i, command))\n+\t\t\t\tbreak ;\n+\t\t}\n+\t}\n+\treturn (1);\n+}\n+\n+void\tfree_t_pnode_list(t_pnode *structure_head)\n+{\n+\tt_pnode\t*current;\n+\tt_pnode\t*next_node;\n+\tchar\t**current_args;\n+\tint\t\ti;\n+\n+\ti = -1;\n+\tnext_node = NULL;\n+\tcurrent = structure_head;\n+\twhile (current != NULL)\n+\t{\n+\t\tnext_node = current->output;\n+\t\tcurrent_args = current->args;\n+\t\tif (current_args != NULL)\n+\t\t{\n+\t\t\twhile (current_args[++i] != NULL)\n+\t\t\t{\n+\t\t\t\tfree(current_args[i]);\n+\t\t\t}\n+\t\t\tfree(current_args);\n+\t\t}\n+\t\tfree(current);\n+\t\tcurrent = next_node;\n+\t}\n+}\n+\n+int\tinit_command(t_command *c, char *s)\n+{\n+\tc->command = NULL;\n+\tc->structure_head = NULL;\n+\tc->structure_actual = NULL;\n+\tc->command_record = 0;\n+\tc->head = NULL;\n+\tc->i = 0;\n+\tif (!s)\n+\t\treturn (-1);\n+\tif (check_virgolette_dispari_start(s, c->i))\n+\t{\n+\t\tprintf(\"Virgolette dispari. Comando invalido.\\n\");\n+\t\treturn (-1);\n+\t}\n+\treturn (1);\n+}\n+\n+int\tcheck_continuation(char *s, t_command *c)\n+{\n+\tif (s[c->i] == '\\0')\n+\t\treturn (1);\n+\tc->command = NULL;\n+\tc->head = NULL;\n+\tc->structure = malloc(sizeof(t_pnode));\n+\tft_memset(c->structure, 0, sizeof(t_pnode));\n+\treturn (0);\n+}\n"
                }
            ],
            "date": 1700393869984,
            "name": "Commit-0",
            "content": "/******************************************************************************/\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   command_list7.c                                    :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/10/30 17:44:53 by shhuang           #+#    #+#             */\n/*   Updated: 2023/11/19 12:37:49 by shhuang          ###   ########.fr       */\n/*                                                                            */\n/******************************************************************************/\n\n#include \"short_code.h\"\n\nint\tcheck_all_end(char *s, int *i, t_redirect **command, int *variabile)\n{\n\t*variabile = end_check(s, i, command);\n\tif (*variabile == -1)\n\t\treturn (-2);\n\telse if (*variabile == -2)\n\t\treturn (-1);\n\telse if (*variabile == -3)\n\t\treturn (0);\n\t*variabile = flag_zero_space(s, i, command);\n\tif (*variabile == -1)\n\t\treturn (-2);\n\tif (*variabile == -2)\n\t\treturn (1);\n\treturn (2);\n}\n\nint\tsize_of_command(char *s, int *i, t_redirect **head, t_pnode *structure)\n{\n\tt_redirect\t*command;\n\tint\t\t\tvariabile;\n\n\tinit_size_of_command(structure, &command, head, i);\n\twhile (s[*i])\n\t{\n\t\tif (skip_and_endstring(s, i))\n\t\t\treturn (-1);\n\t\tif (s[*i] == '|' || s[*i] == '<' || s[*i] == '>')\n\t\t\treturn (0);\n\t\tif (assign_flag(s, i, &command) == -1)\n\t\t\tcontinue ;\n\t\twhile (s[*i])\n\t\t{\n\t\t\tif (check_slashes(s, i, &command) == -1)\n\t\t\t\tcontinue ;\n\t\t\tvariabile = check_all_end(s, i, &command, &variabile);\n\t\t\tif (variabile == -1 || variabile == 0 || variabile == 1)\n\t\t\t\treturn (variabile);\n\t\t\telse if (variabile == -2 || break_or_add(s, i, command))\n\t\t\t\tbreak ;\n\t\t}\n\t}\n\treturn (1);\n}\n\nvoid\tfree_t_pnode_list(t_pnode *structure_head)\n{\n\tt_pnode\t*current;\n\tt_pnode\t*next_node;\n\tchar\t**current_args;\n\tint\t\ti;\n\n\ti = -1;\n\tnext_node = NULL;\n\tcurrent = structure_head;\n\twhile (current != NULL)\n\t{\n\t\tnext_node = current->output;\n\t\tcurrent_args = current->args;\n\t\tif (current_args != NULL)\n\t\t{\n\t\t\twhile (current_args[++i] != NULL)\n\t\t\t{\n\t\t\t\tfree(current_args[i]);\n\t\t\t}\n\t\t\tfree(current_args);\n\t\t}\n\t\tfree(current);\n\t\tcurrent = next_node;\n\t}\n}\n\nint\tinit_command(t_command *c, char *s)\n{\n\tc->command = NULL;\n\tc->structure_head = NULL;\n\tc->structure_actual = NULL;\n\tc->command_record = 0;\n\tc->head = NULL;\n\tc->i = 0;\n\tif (!s)\n\t\treturn (-1);\n\tif (check_virgolette_dispari_start(s, c->i))\n\t{\n\t\tprintf(\"Virgolette dispari. Comando invalido.\\n\");\n\t\treturn (-1);\n\t}\n\treturn (1);\n}\n\nint\tcheck_continuation(char *s, t_command *c)\n{\n\tif (s[c->i] == '\\0')\n\t\treturn (1);\n\tc->command = NULL;\n\tc->head = NULL;\n\tc->structure = malloc(sizeof(t_pnode));\n\tft_memset(c->structure, 0, sizeof(t_pnode));\n\treturn (0);\n}\n"
        }
    ]
}