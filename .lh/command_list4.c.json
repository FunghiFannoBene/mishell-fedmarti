{
    "sourceFile": "command_list4.c",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1700829013295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1700829212423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/10/30 17:42:31 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/24 13:30:13 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/24 13:33:32 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /******************************************************************************/\n \n #include \"short_code.h\"\n@@ -86,9 +86,9 @@\n }\n \n int\tslash_return(char *s, int *i, t_redirect **command)\n {\n-\tif ((*command)->flag == 0 && s[*i] == '\\\\' && (s[*i + 1] == '\\'' || s[*i\n+\tif ((*command)->flag == 0 || (*command)->flag == '\"' && s[*i] == '\\\\' && (s[*i + 1] == '\\'' || s[*i\n \t\t\t\t+ 1] == '\"'))\n \t{\n \t\t(*command)->size++;\n \t\t(*i) += 2;\n@@ -98,12 +98,6 @@\n \t\t\treturn (0);\n \t\t}\n \t\treturn (-1);\n \t}\n-\tif (s[*i] == '\\\\' && s[*i + 1] == '\"')\n-\t{\n-\t\t(*command)->size++;\n-\t\t(*i) += 2;\n-\t\treturn (-1);\n-\t}\n \treturn (0);\n }\n"
                },
                {
                    "date": 1700829293273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/10/30 17:42:31 by shhuang           #+#    #+#             */\n-/*   Updated: 2023/11/24 13:33:32 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/24 13:34:53 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /******************************************************************************/\n \n #include \"short_code.h\"\n@@ -86,10 +86,9 @@\n }\n \n int\tslash_return(char *s, int *i, t_redirect **command)\n {\n-\tif ((*command)->flag == 0 || (*command)->flag == '\"' && s[*i] == '\\\\' && (s[*i + 1] == '\\'' || s[*i\n-\t\t\t\t+ 1] == '\"'))\n+\tif (((*command)->flag == 0 || (*command)->flag == '\"') && (s[*i] == '\\\\' && (s[*i + 1] == '\\'' || s[*i+ 1] == '\"')))\n \t{\n \t\t(*command)->size++;\n \t\t(*i) += 2;\n \t\tif (s[*i] == '\\0')\n"
                }
            ],
            "date": 1700829013295,
            "name": "Commit-0",
            "content": "/******************************************************************************/\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   command_list4.c                                    :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/10/30 17:42:31 by shhuang           #+#    #+#             */\n/*   Updated: 2023/11/24 13:30:13 by shhuang          ###   ########.fr       */\n/*                                                                            */\n/******************************************************************************/\n\n#include \"short_code.h\"\n\nvoid\talloc_command_size(char *s, int *i, t_redirect **command, t_search *k)\n{\n\tk->x = 0;\n\twhile (s[*i] && s[*i] != ' ' && s[*i] != '|' && s[*i] != '<' && s[*i] != '>'\n\t\t&& (s[*i] != '\\'' && s[*i] != '\"'))\n\t\t(*command)->str[k->x++] = s[(*i)++];\n\twhile (((s[*i] != '\\'' && k->single_double == 1) && (s[*i] != '\"'\n\t\t\t\t&& k->single_double == 2)))\n\t\t(*command)->str[k->x++] = s[(*i)++];\n\t(*command)->str[k->x] = '\\0';\n\t(*command)->size = k->x;\n\t(*command)->flag = 0;\n\tif (k->single_double)\n\t\t(*i)++;\n\twhile (s[*i] && s[*i] == ' ')\n\t\t(*i)++;\n}\n\nint\tsearch_command(char *s, int *i, t_redirect **command, t_pnode *structure)\n{\n\tt_search\tk;\n\n\tinit_search(&k, command, s, i);\n\tif (check_zero_move(s, i, command, &k))\n\t\treturn (-3);\n\tk.rx = check_pipe_redi(s, i, command, structure);\n\tif (k.rx != 0)\n\t\treturn (k.rx);\n\tif (create_command_size(s, i, command, &k))\n\t\treturn (-1);\n\talloc_command_size(s, i, command, &k);\n\tif (s[*i] == '\\0')\n\t{\n\t\t(*command)->next = NULL;\n\t\tif (structure->type == Null)\n\t\t\tstructure->type = Program_Call;\n\t\treturn (-2);\n\t}\n\telse\n\t\tnext_size(i, &k.head);\n\treturn (0);\n}\n\nint\tcheck_and_skip_space(char *s, int *i)\n{\n\tif (s[*i] == ' ')\n\t{\n\t\twhile (s[*i] == ' ')\n\t\t\t(*i)++;\n\t}\n\telse\n\t\treturn (-1);\n\treturn (0);\n}\n\nint\tassign_flag(char *s, int *i, t_redirect **command)\n{\n\tif (s[*i] == '\\'')\n\t\t(*command)->flag = '\\'';\n\telse if (s[*i] == '\"')\n\t\t(*command)->flag = '\"';\n\tif ((*command)->flag != 0)\n\t\t(*i)++;\n\tif ((*command)->flag == s[*i])\n\t{\n\t\t(*i)++;\n\t\t(*command)->flag = 0;\n\t\treturn (-1);\n\t}\n\t(*command)->start = *i;\n\treturn (1);\n}\n\nint\tslash_return(char *s, int *i, t_redirect **command)\n{\n\tif ((*command)->flag == 0 && s[*i] == '\\\\' && (s[*i + 1] == '\\'' || s[*i\n\t\t\t\t+ 1] == '\"'))\n\t{\n\t\t(*command)->size++;\n\t\t(*i) += 2;\n\t\tif (s[*i] == '\\0')\n\t\t{\n\t\t\t(*command)->start += 1;\n\t\t\treturn (0);\n\t\t}\n\t\treturn (-1);\n\t}\n\tif (s[*i] == '\\\\' && s[*i + 1] == '\"')\n\t{\n\t\t(*command)->size++;\n\t\t(*i) += 2;\n\t\treturn (-1);\n\t}\n\treturn (0);\n}\n"
        }
    ]
}