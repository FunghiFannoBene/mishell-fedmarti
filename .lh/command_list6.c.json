{
    "sourceFile": "command_list6.c",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1701283469274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1701283522198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   command_list6.c                                    :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/10/30 17:44:00 by shhuang           #+#    #+#             */\n+/*   Updated: 2023/11/29 19:45:22 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"short_code.h\"\n+\n+int\tend_check(char *s, int *i, t_redirect **command)\n+{\n+\tif (!s)\n+\t\treturn (0);\n+\tif (s[*i] == (*command)->flag && s[*i - 1] != '\\\\')\n+\t{\n+\t\t(*i)++;\n+\t\tadd_and_set_for_next(command, s);\n+\t\tif (s[*i] == ' ' || s[*i] == '\\0')\n+\t\t{\n+\t\t\t(*command)->status = 0;\n+\t\t}\n+\t\telse\n+\t\t\t(*command)->status = 1;\n+\t\tcheck_and_skip_space(s, i);\n+\t\t(*command)->start = *i;\n+\t\tif (s[*i] == '\\0')\n+\t\t{\n+\t\t\t(*command)->next = NULL;\n+\t\t\treturn (-2);\n+\t\t}\n+\t\treturn (-1);\n+\t}\n+\treturn (end_check_flag_zero(s, i, command));\n+}\n+\n+int\tflag_zero_space(char *s, int *i, t_redirect **command)\n+{\n+\tif ((*command)->flag == 0 && s[*i] == ' ')\n+\t{\n+\t\t(*command)->next = ft_calloc(sizeof(t_redirect), 1);\n+\t\t(*command)->next->str = substring(s, (size_t)(*command)->start,\n+\t\t\t\t(size_t)(*command)->size);\n+\t\t(*command) = (*command)->next;\n+\t\t(*command)->flag = 0;\n+\t\t(*command)->size = 0;\n+\t\t(*command)->status = 0;\n+\t\tcheck_and_skip_space(s, i);\n+\t\t(*command)->start = *i;\n+\t\tif (s[*i] == '\\0' || s[*i] == '|' || s[*i] == '>' || s[*i] == '<')\n+\t\t{\n+\t\t\t(*command)->next = NULL;\n+\t\t\treturn (-2);\n+\t\t}\n+\t\treturn (-1);\n+\t}\n+\treturn (1);\n+}\n+\n+void\tinit_size_of_command(t_pnode *structure, t_redirect **command,\n+\t\tt_redirect **head, int *i)\n+{\n+\t*command = *head;\n+\tif (structure->type == Null)\n+\t\tstructure->type = Program_Call;\n+\t(*command)->flag = 0;\n+\t(*command)->start = *i;\n+\t(*command)->size = 0;\n+\t(*command)->status = 0;\n+}\n+\n+int\tbreak_or_add(char *s, int *i, t_redirect *command)\n+{\n+\tif (command->flag == 0 && (s[*i] == '\\'' || s[*i] == '\"'))\n+\t\treturn (1);\n+\tif (command->flag == 0 && s[*i] == ' ')\n+\t{\n+\t\t(*i)++;\n+\t\treturn (1);\n+\t}\n+\tcommand->size++;\n+\t(*i)++;\n+\treturn (0);\n+}\n+\n+int\tskip_and_endstring(char *s, int *i)\n+{\n+\tcheck_and_skip_space(s, i);\n+\tif (s[*i] == '\\0')\n+\t\treturn (1);\n+\treturn (0);\n+}\n"
                }
            ],
            "date": 1701283469274,
            "name": "Commit-0",
            "content": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   command_list6.c                                    :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/10/30 17:44:00 by shhuang           #+#    #+#             */\n/*   Updated: 2023/11/29 19:44:29 by shhuang          ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"short_code.h\"\n\nint\tend_check(char *s, int *i, t_redirect **command)\n{\n\tif (!s)\n\t\treturn (0);\n\tif (s[*i] == (*command)->flag && s[*i - 1] != '\\\\')\n\t{\n\t\t(*i)++;\n\t\tadd_and_set_for_next(command, s);\n\t\tif (s[*i] == ' ' || s[*i] == '\\0')\n\t\t{\n\t\t\t(*command)->status = 0;\n\t\t}\n\t\telse\n\t\t\t(*command)->status = 1;\n\t\tcheck_and_skip_space(s, i);\n\t\t(*command)->start = *i;\n\t\tif (s[*i] == '\\0')\n\t\t{\n\t\t\t(*command)->next = NULL;\n\t\t\treturn (-2);\n\t\t}\n\t\treturn (-1);\n\t}\n\treturn (end_check_flag_zero(s, i, command));\n}\n\nint\tflag_zero_space(char *s, int *i, t_redirect **command)\n{\n\tif ((*command)->flag == 0 && s[*i] == ' ')\n\t{\n\t\t(*command)->next = ft_calloc(sizeof(t_redirect));\n\t\t(*command)->next->str = substring(s, (size_t)(*command)->start,\n\t\t\t\t(size_t)(*command)->size);\n\t\t(*command) = (*command)->next;\n\t\t(*command)->flag = 0;\n\t\t(*command)->size = 0;\n\t\t(*command)->status = 0;\n\t\tcheck_and_skip_space(s, i);\n\t\t(*command)->start = *i;\n\t\tif (s[*i] == '\\0' || s[*i] == '|' || s[*i] == '>' || s[*i] == '<')\n\t\t{\n\t\t\t(*command)->next = NULL;\n\t\t\treturn (-2);\n\t\t}\n\t\treturn (-1);\n\t}\n\treturn (1);\n}\n\nvoid\tinit_size_of_command(t_pnode *structure, t_redirect **command,\n\t\tt_redirect **head, int *i)\n{\n\t*command = *head;\n\tif (structure->type == Null)\n\t\tstructure->type = Program_Call;\n\t(*command)->flag = 0;\n\t(*command)->start = *i;\n\t(*command)->size = 0;\n\t(*command)->status = 0;\n}\n\nint\tbreak_or_add(char *s, int *i, t_redirect *command)\n{\n\tif (command->flag == 0 && (s[*i] == '\\'' || s[*i] == '\"'))\n\t\treturn (1);\n\tif (command->flag == 0 && s[*i] == ' ')\n\t{\n\t\t(*i)++;\n\t\treturn (1);\n\t}\n\tcommand->size++;\n\t(*i)++;\n\treturn (0);\n}\n\nint\tskip_and_endstring(char *s, int *i)\n{\n\tcheck_and_skip_space(s, i);\n\tif (s[*i] == '\\0')\n\t\treturn (1);\n\treturn (0);\n}\n"
        }
    ]
}