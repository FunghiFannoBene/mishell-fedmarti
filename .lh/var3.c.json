{
    "sourceFile": "var3.c",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1701293664557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1701293676134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/10/10 20:38:40 by fedmarti          #+#    #+#             */\n-/*   Updated: 2023/11/29 22:34:24 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 22:34:36 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"minishell.h\"\n@@ -30,9 +30,9 @@\n \tchar\t*name;\n \n \tif (!str)\n \t\treturn (NULL);\n-\ti = ;\n+\ti = 0;\n \tif (*str != '$')\n \t\tstr = ft_strchr(str, '$');\n \tstr++;\n \twhile (str[i] && (str[i] == '_' || ft_isalnum(str[i])))\n"
                },
                {
                    "date": 1701293691136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/10/10 20:38:40 by fedmarti          #+#    #+#             */\n-/*   Updated: 2023/11/29 22:34:36 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 22:34:51 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"minishell.h\"\n@@ -34,8 +34,9 @@\n \ti = 0;\n \tif (*str != '$')\n \t\tstr = ft_strchr(str, '$');\n \tstr++;\n+\tif\n \twhile (str[i] && (str[i] == '_' || ft_isalnum(str[i])))\n \t\ti++;\n \tname = ft_calloc(i + 1, sizeof(char));\n \tif (!name)\n"
                },
                {
                    "date": 1701293698142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   var3.c                                             :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/10/10 20:38:40 by fedmarti          #+#    #+#             */\n+/*   Updated: 2023/11/29 22:34:58 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"minishell.h\"\n+\n+static inline int\tis_(char c, char *charset)\n+{\n+\twhile (charset && *charset)\n+\t{\n+\t\tif (c == *charset)\n+\t\t\treturn (1);\n+\t\tcharset++;\n+\t}\n+\treturn (0);\n+}\n+\n+t_var\t*search_variable_tvar(char *str, t_data *data)\n+{\n+\tt_var\t*var;\n+\tint\t\ti;\n+\tchar\t*name;\n+\n+\tif (!str)\n+\t\treturn (NULL);\n+\ti = 0;\n+\tif (*str != '$')\n+\t\tstr = ft_strchr(str, '$');\n+\tstr++;\n+\t\n+\twhile (str[i] && (str[i] == '_' || ft_isalnum(str[i])))\n+\t\ti++;\n+\tname = ft_calloc(i + 1, sizeof(char));\n+\tif (!name)\n+\t\treturn (NULL);\n+\tft_strlcpy(name, str, i + 1);\n+\tif (*name == '?')\n+\t\tvar = data->exit_status;\n+\telse\n+\t\tvar = get_var(name, data->export_var);\n+\tfree(name);\n+\treturn (var);\n+}\n+\n+//advances to the nearest $ and searches the subsequent sting within env_var\n+//return NULL if no match is found, the variable is NULL or malloc fails\n+//allocates a copy of the var variable value if found\n+char\t*search_variable(char *str, t_data *data)\n+{\n+\tt_var\t*var;\n+\n+\tvar = search_variable_tvar(str, data);\n+\tif (!var || !var->value)\n+\t\treturn (NULL);\n+\treturn (ft_strdup(var->value));\n+}\n"
                },
                {
                    "date": 1701293703247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n /*                                                    +:+ +:+         +:+     */\n /*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n /*                                                +#+#+#+#+#+   +#+           */\n /*   Created: 2023/10/10 20:38:40 by fedmarti          #+#    #+#             */\n-/*   Updated: 2023/11/29 22:35:01 by shhuang          ###   ########.fr       */\n+/*   Updated: 2023/11/29 22:35:03 by shhuang          ###   ########.fr       */\n /*                                                                            */\n /* ************************************************************************** */\n \n #include \"minishell.h\"\n@@ -34,9 +34,9 @@\n \ti = 0;\n \tif (*str != '$')\n \t\tstr = ft_strchr(str, '$');\n \tstr++;\n-\tif \n+\tif ()\n \twhile (str[i] && (str[i] == '_' || ft_isalnum(str[i])))\n \t\ti++;\n \tname = ft_calloc(i + 1, sizeof(char));\n \tif (!name)\n"
                },
                {
                    "date": 1701293709732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,63 @@\n+/* ************************************************************************** */\n+/*                                                                            */\n+/*                                                        :::      ::::::::   */\n+/*   var3.c                                             :+:      :+:    :+:   */\n+/*                                                    +:+ +:+         +:+     */\n+/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n+/*                                                +#+#+#+#+#+   +#+           */\n+/*   Created: 2023/10/10 20:38:40 by fedmarti          #+#    #+#             */\n+/*   Updated: 2023/11/29 22:35:09 by shhuang          ###   ########.fr       */\n+/*                                                                            */\n+/* ************************************************************************** */\n+\n+#include \"minishell.h\"\n+\n+static inline int\tis_(char c, char *charset)\n+{\n+\twhile (charset && *charset)\n+\t{\n+\t\tif (c == *charset)\n+\t\t\treturn (1);\n+\t\tcharset++;\n+\t}\n+\treturn (0);\n+}\n+\n+t_var\t*search_variable_tvar(char *str, t_data *data)\n+{\n+\tt_var\t*var;\n+\tint\t\ti;\n+\tchar\t*name;\n+\n+\tif (!str)\n+\t\treturn (NULL);\n+\ti = 0;\n+\tif (*str != '$')\n+\t\tstr = ft_strchr(str, '$');\n+\tstr++;\n+\twhile (str[i] && (str[i] == '_' || ft_isalnum(str[i])))\n+\t\ti++;\n+\tname = ft_calloc(i + 1, sizeof(char));\n+\tif (!name)\n+\t\treturn (NULL);\n+\tft_strlcpy(name, str, i + 1);\n+\tif (*name == '?')\n+\t\tvar = data->exit_status;\n+\telse\n+\t\tvar = get_var(name, data->export_var);\n+\tfree(name);\n+\treturn (var);\n+}\n+\n+//advances to the nearest $ and searches the subsequent sting within env_var\n+//return NULL if no match is found, the variable is NULL or malloc fails\n+//allocates a copy of the var variable value if found\n+char\t*search_variable(char *str, t_data *data)\n+{\n+\tt_var\t*var;\n+\n+\tvar = search_variable_tvar(str, data);\n+\tif (!var || !var->value)\n+\t\treturn (NULL);\n+\treturn (ft_strdup(var->value));\n+}\n"
                }
            ],
            "date": 1701293664557,
            "name": "Commit-0",
            "content": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   var3.c                                             :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: shhuang <dsheng1993@gmail.com>             +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2023/10/10 20:38:40 by fedmarti          #+#    #+#             */\n/*   Updated: 2023/11/29 22:34:24 by shhuang          ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"minishell.h\"\n\nstatic inline int\tis_(char c, char *charset)\n{\n\twhile (charset && *charset)\n\t{\n\t\tif (c == *charset)\n\t\t\treturn (1);\n\t\tcharset++;\n\t}\n\treturn (0);\n}\n\nt_var\t*search_variable_tvar(char *str, t_data *data)\n{\n\tt_var\t*var;\n\tint\t\ti;\n\tchar\t*name;\n\n\tif (!str)\n\t\treturn (NULL);\n\ti = ;\n\tif (*str != '$')\n\t\tstr = ft_strchr(str, '$');\n\tstr++;\n\twhile (str[i] && (str[i] == '_' || ft_isalnum(str[i])))\n\t\ti++;\n\tname = ft_calloc(i + 1, sizeof(char));\n\tif (!name)\n\t\treturn (NULL);\n\tft_strlcpy(name, str, i + 1);\n\tif (*name == '?')\n\t\tvar = data->exit_status;\n\telse\n\t\tvar = get_var(name, data->export_var);\n\tfree(name);\n\treturn (var);\n}\n\n//advances to the nearest $ and searches the subsequent sting within env_var\n//return NULL if no match is found, the variable is NULL or malloc fails\n//allocates a copy of the var variable value if found\nchar\t*search_variable(char *str, t_data *data)\n{\n\tt_var\t*var;\n\n\tvar = search_variable_tvar(str, data);\n\tif (!var || !var->value)\n\t\treturn (NULL);\n\treturn (ft_strdup(var->value));\n}\n"
        }
    ]
}